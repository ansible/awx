[tox]
skipsdist = true
envlist =
    api-lint,
    ui-lint,
    api,
    ui,
    coveralls

[testenv]
basepython = python2.7
setenv =
    DJANGO_SETTINGS_MODULE = awx.settings.development_quiet
    SWIG_FEATURES = -cpperraswarn -includeall -I/usr/include/openssl
    HOME = {homedir}
    USERPROFILE = {homedir}
    ANSIBLE_VENV_PATH = {toxworkdir}
    AWX_VENV_PATH = {toxworkdir}
    SKIP_SLOW_TESTS = True

[testenv:api-lint]
deps =
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/requirements_dev.txt
    coverage
    coveralls
commands =
    make flake8

[testenv:ui-lint]
deps =
    nodeenv
commands =
    make jshint

[testenv:api]
deps =
    -r{toxinidir}/requirements/requirements.txt
    -r{toxinidir}/requirements/requirements_dev.txt
    ansible
    coverage
    coveralls
commands =
    python setup.py develop
    # coverage run --help
    # coverage run -p --source awx/main/tests -m pytest {posargs}
    py.test awx/main/tests awx/conf/tests awx/sso/tests {posargs:-k 'not old'}

[testenv:ui]
deps =
    nodeenv
commands =
    make ui-test-ci

[testenv:ansible]
deps =
    ansible
    pytest
    -r{toxinidir}/requirements/requirements_ansible.txt
commands =
    {envdir}/bin/py.test awx/lib/tests/ -c awx/lib/tests/pytest.ini {posargs}

[testenv:coveralls]
commands=
    coverage combine
    coverage report -m
    coveralls

[pytest]
DJANGO_SETTINGS_MODULE = awx.settings.development
python_paths = venv/tower/lib/python2.7/site-packages
site_dirs = venv/tower/lib/python2.7/site-packages
python_files = *.py
addopts = --reuse-db --nomigrations --tb=native
markers =
    ac: access control test
    license_feature: ensure license features are accessible or not depending on license

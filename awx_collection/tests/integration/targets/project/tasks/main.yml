---
- name: Generate names
  set_fact:
    project_name1: "AWX-Collection-tests-project-project1-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    project_name2: "AWX-Collection-tests-project-project2-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    project_name3: "AWX-Collection-tests-project-project3-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    jt1: "AWX-Collection-tests-project-jt1-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    scm_cred_name: "AWX-Collection-tests-project-scm-cred-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    org_name: "AWX-Collection-tests-project-org-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
    cred_name: "AWX-Collection-tests-project-cred-{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"

- block:
    - name: Create an SCM Credential
      credential:
        name: "{{ scm_cred_name }}"
        organization: Default
        credential_type: Source Control
      register: result

    - name: Assert SCM Credential created successfully
      assert:
        that:
          - result is changed

    - name: Create organization
      organization:
        name: "{{ org_name }}"
      register: result

    - name: Assert organization created successfully
      assert:
        that:
          - result is changed

    - name: Create credential
      credential:
        credential_type: Source Control
        name: "{{ cred_name }}"
        organization: "{{ org_name }}"
      register: result

    - name: Assert credential created successfully
      assert:
        that:
          - result is changed

    - name: Create project tests
      set_fact:
        controller_projects:
          - name: "{{ project_name1 }}"
            description: Create a git project without credentials and wait
            organization: Default
            scm_type: git
            scm_url: https://github.com/ansible/test-playbooks
            wait: true
          - name: "{{ project_name1 }}"
            # description: Recreate the project to validate not changed
            organization: Default
            scm_type: git
            scm_url: https://github.com/ansible/test-playbooks
            wait: true
          - name: "asdf{{ project_name2 }}"
            description: Create a new test project in check_mode
            organization: Default
            scm_type: git
            scm_url: https://github.com/ansible/test-playbooks
            wait: true
            check_mode: true
          - name: "{{ project_name2 }}"
            description: "Copy project from {{ project_name1 }}"
            copy_from: "{{ project_name1 }}"
            organization: "{{ org_name }}"
            scm_type: git
            scm_credential: "{{ cred_name }}"
          - name: "{{ project_name2 }}"
            description: Check module fails with correct msg when given non-existing org as param
            organization: Non_Existing_Org
            scm_type: git
            scm_url: https://github.com/ansible/test-playbooks
            scm_credential: "{{ cred_name }}"
            ignore_errors: true
          - name: "{{ project_name2 }}"
            description: Check module fails with correct msg when given non-existing credential as param
            organization: "{{ org_name }}"
            scm_type: git
            scm_url: https://github.com/ansible/test-playbooks
            scm_credential: Non_Existing_Credential
            ignore_errors: true
          - name: "{{ project_name3 }}"
            description: Create a git project without credentials without waiting
            organization: Default
            scm_type: git
            scm_branch: empty_branch
            scm_url: https://github.com/ansible/test-playbooks
            allow_override: true
          - name: "{{ project_name3 }}"
            description: Update the project and wait. Verify not changed as no change made to repo and refspec not changed
            organization: Default
            scm_type: git
            scm_branch: empty_branch
            scm_url: https://github.com/ansible/test-playbooks
            allow_override: true
            wait: true
            update_project: true

    - name: Run projects role
      include_role:
        name: projects

    - debug:
        var: controller_projects_results

    - name: Assert projects tests passed
      assert:
        that:
          - controller_projects_results.results[0] is changed
          - controller_projects_results.results[1] is not changed
          # 2 check mode reports as changed, but does not create the project
          # If 3 fails it may be because the check_mode task actually already created
          # the project, or it could be because the module actually failed somehow
          - controller_projects_results.results[3].copied
          - controller_projects_results.results[4] is failed
          - controller_projects_results.results[4] is not changed
          - "'Non_Existing_Org' in controller_projects_results.results[4].msg"
          - controller_projects_results.results[4].total_results == 0
          - controller_projects_results.results[5] is failed
          - controller_projects_results.results[5] is not changed
          - "'Non_Existing_Credential' in controller_projects_results.results[5].msg"
          - controller_projects_results.results[5].total_results == 0
          - controller_projects_results.results[6] is changed
          - controller_projects_results.results[7] is not changed

    - name: Create a job template that overrides the project scm_branch
      job_template:
        name: "{{ jt1 }}"
        project: "{{ project_name3 }}"
        inventory: "Demo Inventory"
        scm_branch: master
        playbook: debug.yml

    - name: Launch "{{ jt1 }}"
      job_launch:
        job_template: "{{ jt1 }}"
      register: result

    - assert:
        that:
          - result is changed

    - name: "wait for job {{ result.id }}"
      job_wait:
        job_id: "{{ result.id }}"
      register: job

    - assert:
        that:
          - job is successful

  always:

    - name: Delete the test job_template
      job_template:
        name: "{{ jt1 }}"
        project: "{{ project_name3 }}"
        inventory: "Demo Inventory"
        state: absent

    - name: Delete the SCM Credential
      credential:
        name: "{{ scm_cred_name }}"
        organization: Default
        credential_type: Source Control
        state: absent
      register: result

    - name: Assert Credential is removed
      assert:
        that:
          - result is changed

    - name: Set State overide
      set_fact:
        controller_state: absent

    - name: Run projects role
      include_role:
        name: projects

    - name: Assert projects tests passed
      assert:
        that:
          - controller_projects_results.results[0] is changed
          - controller_projects_results.results[3] is changed
          - controller_projects_results.results[6] is changed

    - name: Delete credential
      credential:
        credential_type: Source Control
        name: "{{ cred_name }}"
        organization: "{{ org_name }}"
        state: absent
      register: result

    - name: Assert Credential is removed
      assert:
        that:
          - result is changed

    - name: Delete the organization
      organization:
        name: "{{ org_name }}"
        state: absent
      register: result

    - name: Assert organization is removed
      assert:
        that:
          - result is changed

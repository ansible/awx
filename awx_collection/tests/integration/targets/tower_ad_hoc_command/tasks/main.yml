---
- name: Generate a random string for test
  set_fact:
    test_id: "{{ lookup('password', '/dev/null chars=ascii_letters length=16') }}"
  when: test_id is not defined

- name: Generate names
  set_fact:
    inv_name: "AWX-Collection-tests-tower_tower_ad_hoc_command-inventory-{{ test_id }}"
    ssh_cred_name: "AWX-Collection-tests-tower_tower_ad_hoc_command-ssh-cred-{{ test_id }}"
    org_name: "AWX-Collection-tests-tower_tower_ad_hoc_command-org-{{ test_id }}"

- name: Create a New Organization
  tower_organization:
    name: "{{ org_name }}"

- name: Create an Inventory
  tower_inventory:
    name: "{{ inv_name }}"
    organization: "{{ org_name }}"
    state: present

- name: Add localhost to the Inventory
  tower_host:
    name: localhost
    inventory: "{{ inv_name }}"
    variables:
      ansible_connection: local

- name: Create a Credential
  tower_credential:
    name: "{{ ssh_cred_name }}"
    organization: "{{ org_name }}"
    credential_type: 'Machine'
    state: present

- name: Launch an Ad Hoc Command waiting for it to finish
  tower_ad_hoc_command:
    inventory: "{{ inv_name }}"
    credential: "{{ ssh_cred_name }}"
    module_name: "command"
    module_args: "echo I <3 Ansible"
    wait: true
  register: result

- assert:
    that:
      - "result is changed"
      - "result.status == 'successful'"

- name: Launch an Ad Hoc Command without module argument
  tower_ad_hoc_command:
    inventory: "Demo Inventory"
    credential: "{{ ssh_cred_name }}"
    module_name: "ping"
    wait: true
  register: result

- assert:
    that:
      - "result is changed"
      - "result.status == 'successful'"

- name: Check module fails with correct msg
  tower_ad_hoc_command:
    inventory: "{{ inv_name }}"
    credential: "{{ ssh_cred_name }}"
    module_name: "Does not exist"
  register: result
  ignore_errors: true

- assert:
    that:
      - "result is failed"
      - "result is not changed"
      - "'Does not exist' in result.response['json']['module_name'][0]"

- name: Delete the Credential
  tower_credential:
    name: "{{ ssh_cred_name }}"
    organization: "{{ org_name }}"
    credential_type: 'Machine'
    state: absent

- name: Delete the Inventory
  tower_inventory:
    name: "{{ inv_name }}"
    organization: "{{ org_name }}"
    state: absent

- name: Remove the Organization
  tower_organization:
    name: "{{ org_name }}"
    state: absent

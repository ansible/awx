---
# tasks file for controller_settings
- name: Update Ansible Controller Settings from dictionary or list of dictionaries
  settings:
    settings:                 "{{ __controller_setting_item.settings | default(omit, true) }}"
    name:                     "{{ __controller_setting_item.name | default(omit, true) }}"
    value:                    "{{ __controller_setting_item.value | default(omit) }}"

    # Role Standard Options
    controller_config_file:   "{{ controller_config_file | default(omit, true) }}"
    controller_host:          "{{ controller_hostname | default(omit, true) }}"
    controller_password:      "{{ controller_password | default(omit, true) }}"
    controller_username:      "{{ controller_username | default(omit, true) }}"
    controller_oauthtoken:    "{{ controller_oauthtoken | default(omit, true) }}"
    validate_certs:           "{{ controller_validate_certs | default(omit) }}"
  # controller_settings must be either a dictionary/mapping or a list of dictionaries
  loop: "{{ controller_settings is mapping | ternary([controller_settings], controller_settings) }}"
  loop_control:
    loop_var: __controller_setting_item
  no_log: "{{ controller_configuration_settings_secure_logging }}"
  async: 1000
  poll: 0
  register: __controller_setting_job_async
  changed_when: not __controller_setting_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'

- name: "Configure Settings | Wait for finish the Settings creation"
  ansible.builtin.async_status:
    jid: "{{ __controller_setting_job_async_results_item.ansible_job_id }}"
  register: __controller_setting_job_async_result
  until: __controller_setting_job_async_result.finished
  retries: "{{ controller_configuration_settings_async_retries }}"
  delay: "{{ controller_configuration_settings_async_delay }}"
  loop: "{{ __controller_setting_job_async.results }}"
  loop_control:
    loop_var: __controller_setting_job_async_results_item
  when: __controller_setting_job_async_results_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_settings_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
...

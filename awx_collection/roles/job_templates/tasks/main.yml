---
# Create Controller Template
- name: Add Controller Job Templates
  job_template:
    name: "{{ __controller_template_item.name | mandatory }}"
    new_name: "{{ __controller_template_item.new_name | default(omit, true) }}"
    copy_from: "{{ __controller_template_item.copy_from | default(omit, true) }}"
    description: "{{ __controller_template_item.description | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    execution_environment: "{{ __controller_template_item.execution_environment.name | default(__controller_template_item.execution_environment | default(omit, true)) }}"
    custom_virtualenv: "{{ __controller_template_item.custom_virtualenv | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    job_type: "{{ __controller_template_item.job_type | default('run') }}"
    inventory: "{{ __controller_template_item.inventory.name | default(__controller_template_item.inventory | default(omit, true)) }}"
    organization: "{{ __controller_template_item.organization.name | default(__controller_template_item.organization | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true)) }}"
    project: "{{ __controller_template_item.project.name | default(__controller_template_item.project | default(omit, true)) }}"
    playbook: "{{ __controller_template_item.playbook | default(omit, true) }}"
    credentials: "{{ __controller_template_item.credentials | default(__controller_template_item.related.credentials | default([]) | map(attribute='name') | list) | default(omit, true) }}"
    forks: "{{ __controller_template_item.forks | default(( 0 if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    limit: "{{ __controller_template_item.limit | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    verbosity: "{{ __controller_template_item.verbosity | default(( 0 if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    extra_vars: "{{ __controller_template_item.extra_vars | default(( {} if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    job_tags: "{{ __controller_template_item.job_tags | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    force_handlers: "{{ __controller_template_item.force_handlers | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    skip_tags: "{{ __controller_template_item.skip_tags | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    start_at_task: "{{ __controller_template_item.start_at_task | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    diff_mode: "{{ __controller_template_item.diff_mode | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    use_fact_cache: "{{ __controller_template_item.use_fact_cache | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    host_config_key: "{{ __controller_template_item.host_config_key | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    ask_scm_branch_on_launch: "{{ __controller_template_item.ask_scm_branch_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_diff_mode_on_launch: "{{ __controller_template_item.ask_diff_mode_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_variables_on_launch: "{{ __controller_template_item.ask_variables_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_limit_on_launch: "{{ __controller_template_item.ask_limit_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_tags_on_launch: "{{ __controller_template_item.ask_tags | default(__controller_template_item.ask_tags_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit))) }}"
    ask_skip_tags_on_launch: "{{ __controller_template_item.ask_skip_tags | default(__controller_template_item.ask_skip_tags_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit))) }}"
    ask_job_type_on_launch: "{{ __controller_template_item.ask_job_type_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_verbosity_on_launch: "{{ __controller_template_item.ask_verbosity_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_inventory_on_launch: "{{ __controller_template_item.ask_inventory_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_credential_on_launch: "{{ __controller_template_item.ask_credential_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_execution_environment_on_launch: "{{ __controller_template_item.ask_execution_environment_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_forks_on_launch: "{{ __controller_template_item.ask_forks_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_instance_groups_on_launch: "{{ __controller_template_item.ask_instance_groups_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_job_slice_count_on_launch: "{{ __controller_template_item.ask_job_slice_count_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_labels_on_launch: "{{ __controller_template_item.ask_labels_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    ask_timeout_on_launch: "{{ __controller_template_item.ask_timeout_on_launch | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    prevent_instance_group_fallback: "{{ __controller_template_item.prevent_instance_group_fallback | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    survey_enabled: "{{ __controller_template_item.survey_enabled | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    survey_spec: "{{ __controller_template_item.related.survey_spec | default(__controller_template_item.survey_spec | default(__controller_template_item.survey | default(( {} if controller_configuration_job_templates_enforce_defaults else omit), true))) }}"
    become_enabled: "{{ __controller_template_item.become_enabled | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    allow_simultaneous: "{{ __controller_template_item.allow_simultaneous | default(( false if controller_configuration_job_templates_enforce_defaults else omit)) }}"
    timeout: "{{ __controller_template_item.timeout | default(( 0 if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    instance_groups: "{{ __controller_template_item.instance_groups | default(( [] if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    job_slice_count: "{{ __controller_template_item.job_slice_count | default(( 1 if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    webhook_service: "{{ __controller_template_item.webhook_service | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    webhook_credential: "{{ __controller_template_item.webhook_credential | default(omit, true) }}"
    scm_branch: "{{ __controller_template_item.scm_branch | default(( '' if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    labels: "{{ (__controller_template_item.related.labels | map(attribute='name') | list if __controller_template_item.related.labels is defined) | default(__controller_template_item.labels) | default(( [] if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    state: "{{ __controller_template_item.state | default(controller_state | default('present')) }}"
    notification_templates_started: "{{ (__controller_template_item.related.notification_templates_started | map(attribute='name') | list if __controller_template_item.related.notification_templates_started is defined) | default(__controller_template_item.notification_templates_started) | default(( [] if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    notification_templates_success: "{{ (__controller_template_item.related.notification_templates_success | map(attribute='name') | list if __controller_template_item.related.notification_templates_success is defined) | default(__controller_template_item.notification_templates_success) | default(( [] if controller_configuration_job_templates_enforce_defaults else omit), true) }}"
    notification_templates_error: "{{ (__controller_template_item.related.notification_templates_error | map(attribute='name') | list if __controller_template_item.related.notification_templates_error is defined) | default(__controller_template_item.notification_templates_error) | default(( [] if controller_configuration_job_templates_enforce_defaults else omit), true) }}"

    # Role Standard Options
    controller_username: "{{ controller_username | default(omit, true) }}"
    controller_password: "{{ controller_password | default(omit, true) }}"
    controller_oauthtoken: "{{ controller_oauthtoken | default(omit, true) }}"
    controller_host: "{{ controller_hostname | default(omit, true) }}"
    controller_config_file: "{{ controller_config_file | default(omit, true) }}"
    validate_certs: "{{ controller_validate_certs | default(omit) }}"
  loop: "{{ job_templates if job_templates is defined else controller_templates }}"
  loop_control:
    loop_var: __controller_template_item
  no_log: "{{ controller_configuration_job_templates_secure_logging }}"
  async: 1000
  poll: 0
  register: __job_templates_job_async
  changed_when: not __job_templates_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'

- name: "Configure Controller Job Templates | Wait for finish the job templates creation"
  ansible.builtin.async_status:
    jid: "{{ __job_templates_job_async_result_item.ansible_job_id }}"
  register: __job_templates_job_async_result
  until: __job_templates_job_async_result.finished
  retries: "{{ controller_configuration_job_templates_async_retries }}"
  delay: "{{ controller_configuration_job_templates_async_delay }}"
  loop: "{{ __job_templates_job_async.results }}"
  loop_control:
    loop_var: __job_templates_job_async_result_item
  when: __job_templates_job_async_result_item.ansible_job_id is defined
  no_log: "{{ controller_configuration_job_templates_secure_logging }}"
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
...

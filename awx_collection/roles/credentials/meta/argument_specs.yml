---
argument_specs:
  main:
    short_description: An Ansible Role to create credentials on Ansible Controller.
    options:
      controller_credentials:
        description: Data structure describing your credentials
        type: list
        elements: dict
        # options:
        #   name:
        #     type: str
        #     required: true
        #     description: Name of Credential
        #   description:
        #     type: str
        #     required: false
        #     description: The description of the credential to give more detail about it.
        #   new_name:
        #     type: str
        #     required: false
        #     description: Setting this option will change the existing name (looked up via the name field).
        #   copy_from:
        #     type: str
        #     required: false
        #     description: Name or id to copy the credential from. This will copy an existing credential and change any parameters supplied.
        #   organization:
        #     type: str
        #     required: false
        #     description: Organization this Credential belongs to. If provided on creation, do not give either user or team.
        #   credential_type:
        #     type: str
        #     required: false
        #     description: Name of credential type. See below for list of options. More information in Ansible controller documentation.
        #   inputs:
        #     type: dict
        #     required: false
        #     description: Credential inputs where the keys are var names used in templating. Refer to the Ansible controller documentation for example syntax. Individual examples can be found at /api/v2/credential_types/ on an controller.
        #   user:
        #     type: str
        #     required: false
        #     description: User that should own this credential. If provided, do not give either team or organization.
        #   team:
        #     type: str
        #     required: false
        #     description: Team that should own this credential. If provided, do not give either user or organization.
        #   update_secrets:
        #     default: true
        #     type: bool
        #     required: false
        #     description: True will always change password if user specifies password, even if API gives $encrypted$ for password. False will only set the password if other values change too.
        #   state:
        #     default: "{{ controller_state | default('present') }}"
        #     type: str
        #     required: false
        #     description: Desired state of the resource.

      # Async variables
      controller_configuration_credentials_async_retries:
        default: "{{ controller_configuration_async_retries | default(30) }}"
        required: false
        description: This variable sets the number of retries to attempt for the role.
      controller_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      controller_configuration_credentials_async_delay:
        default: "{{ controller_configuration_async_delay | default(1) }}"
        required: false
        description: This variable sets delay between retries for the role.
      controller_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.


      # No_log variables
      controller_configuration_credentials_secure_logging:
        default: "{{ controller_configuration_secure_logging | default(true) }}"
        required: false
        type: bool
        description: Whether or not to include the sensitive tasks from this role in the log. Set this value to `true` if you will be providing your sensitive values from elsewhere.
      controller_configuration_secure_logging:
        default: true
        required: false
        type: bool
        description: This variable enables secure logging across all roles as a default.

      # Generic across all roles
      controller_state:
        default: present
        required: false
        description: The state all objects will take unless overridden by object default
        type: str
      controller_hostname:
        default: None
        required: false
        description: URL to the Ansible Controller Server.
        type: str
      controller_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the Ansible Controller Server's SSL certificate.
        type: str
      controller_username:
        default: None
        required: false
        description: Admin User on the Ansible Controller Server. Either username / password or oauthtoken need to be specified.
        type: str
      controller_password:
        default: None
        required: false
        description: Controller Admin User's password on the Ansible Controller Server. This should be stored in an Ansible Vault at vars/controller-secrets.yml or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
      controller_oauthtoken:
        default: None
        required: false
        description: Controller Admin User's token on the Ansible Controller Server. This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
...

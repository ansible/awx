[
  {
    "id": 5,
    "type": "credential_type",
    "url": "/api/v2/credential_types/5/",
    "related": {
      "credentials": "/api/v2/credential_types/5/credentials/",
      "activity_stream": "/api/v2/credential_types/5/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.160896Z",
    "modified": "2020-05-18T21:54:05.348882Z",
    "name": "Amazon Web Services",
    "description": "",
    "kind": "cloud",
    "namespace": "aws",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Access Key",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Secret Key",
          "type": "string",
          "secret": true
        },
        {
          "id": "security_token",
          "label": "STS Token",
          "type": "string",
          "secret": true,
          "help_text": "Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users."
        }
      ],
      "required": ["username", "password"]
    },
    "injectors": {}
  },
  {
    "id": 16,
    "type": "credential_type",
    "url": "/api/v2/credential_types/16/",
    "related": {
      "credentials": "/api/v2/credential_types/16/credentials/",
      "activity_stream": "/api/v2/credential_types/16/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.334813Z",
    "modified": "2020-05-18T21:54:05.424087Z",
    "name": "Ansible Tower",
    "description": "",
    "kind": "cloud",
    "namespace": "tower",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "host",
          "label": "Ansible Tower Hostname",
          "type": "string",
          "help_text": "The Ansible Tower base URL to authenticate with."
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        },
        {
          "id": "verify_ssl",
          "label": "Verify SSL",
          "type": "boolean",
          "secret": false
        }
      ],
      "required": ["host", "username", "password"]
    },
    "injectors": {
      "env": {
        "TOWER_HOST": "{{host}}",
        "TOWER_USERNAME": "{{username}}",
        "TOWER_PASSWORD": "{{password}}",
        "TOWER_VERIFY_SSL": "{{verify_ssl}}"
      }
    }
  },
  {
    "id": 10,
    "type": "credential_type",
    "url": "/api/v2/credential_types/10/",
    "related": {
      "credentials": "/api/v2/credential_types/10/credentials/",
      "activity_stream": "/api/v2/credential_types/10/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.251095Z",
    "modified": "2020-05-18T21:54:05.383305Z",
    "name": "Google Compute Engine",
    "description": "",
    "kind": "cloud",
    "namespace": "gce",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Service Account Email Address",
          "type": "string",
          "help_text": "The email address assigned to the Google Compute Engine service account."
        },
        {
          "id": "project",
          "label": "Project",
          "type": "string",
          "help_text": "The Project ID is the GCE assigned identification. It is often constructed as three words or two words followed by a three-digit number. Examples: project-id-000 and another-project-id"
        },
        {
          "id": "ssh_key_data",
          "label": "RSA Private Key",
          "type": "string",
          "format": "ssh_private_key",
          "secret": true,
          "multiline": true,
          "help_text": "Paste the contents of the PEM file associated with the service account email."
        }
      ],
      "required": ["username", "ssh_key_data"]
    },
    "injectors": {}
  },
  {
    "id": 11,
    "type": "credential_type",
    "url": "/api/v2/credential_types/11/",
    "related": {
      "credentials": "/api/v2/credential_types/11/credentials/",
      "activity_stream": "/api/v2/credential_types/11/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.263250Z",
    "modified": "2020-05-18T21:54:05.389597Z",
    "name": "Microsoft Azure Resource Manager",
    "description": "",
    "kind": "cloud",
    "namespace": "azure_rm",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "subscription",
          "label": "Subscription ID",
          "type": "string",
          "help_text": "Subscription ID is an Azure construct, which is mapped to a username."
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        },
        {
          "id": "client",
          "label": "Client ID",
          "type": "string"
        },
        {
          "id": "secret",
          "label": "Client Secret",
          "type": "string",
          "secret": true
        },
        {
          "id": "tenant",
          "label": "Tenant ID",
          "type": "string"
        },
        {
          "id": "cloud_environment",
          "label": "Azure Cloud Environment",
          "type": "string",
          "help_text": "Environment variable AZURE_CLOUD_ENVIRONMENT when using Azure GovCloud or Azure stack."
        }
      ],
      "required": ["subscription"]
    },
    "injectors": {}
  },
  {
    "id": 6,
    "type": "credential_type",
    "url": "/api/v2/credential_types/6/",
    "related": {
      "credentials": "/api/v2/credential_types/6/credentials/",
      "activity_stream": "/api/v2/credential_types/6/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.178681Z",
    "modified": "2020-05-18T21:54:05.355877Z",
    "name": "OpenStack",
    "description": "",
    "kind": "cloud",
    "namespace": "openstack",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password (API Key)",
          "type": "string",
          "secret": true
        },
        {
          "id": "host",
          "label": "Host (Authentication URL)",
          "type": "string",
          "help_text": "The host to authenticate with.  For example, https://openstack.business.com/v2.0/"
        },
        {
          "id": "project",
          "label": "Project (Tenant Name)",
          "type": "string"
        },
        {
          "id": "project_domain_name",
          "label": "Project (Domain Name)",
          "type": "string"
        },
        {
          "id": "domain",
          "label": "Domain Name",
          "type": "string",
          "help_text": "OpenStack domains define administrative boundaries. It is only needed for Keystone v3 authentication URLs. Refer to Ansible Tower documentation for common scenarios."
        },
        {
          "id": "project_region_name",
          "label": "Region Name",
          "type": "string"
        },
        {
          "id": "verify_ssl",
          "label": "Verify SSL",
          "type": "boolean",
          "default": true
        }
      ],
      "required": ["username", "password", "host", "project"]
    },
    "injectors": {}
  },
  {
    "id": 8,
    "type": "credential_type",
    "url": "/api/v2/credential_types/8/",
    "related": {
      "credentials": "/api/v2/credential_types/8/credentials/",
      "activity_stream": "/api/v2/credential_types/8/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.209086Z",
    "modified": "2020-05-18T21:54:05.370135Z",
    "name": "Red Hat Satellite 6",
    "description": "",
    "kind": "cloud",
    "namespace": "satellite6",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "host",
          "label": "Satellite 6 URL",
          "type": "string",
          "help_text": "Enter the URL that corresponds to your Red Hat Satellite 6 server. For example, https://satellite.example.org"
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        }
      ],
      "required": ["host", "username", "password"]
    },
    "injectors": {}
  },
  {
    "id": 15,
    "type": "credential_type",
    "url": "/api/v2/credential_types/15/",
    "related": {
      "credentials": "/api/v2/credential_types/15/credentials/",
      "activity_stream": "/api/v2/credential_types/15/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.320780Z",
    "modified": "2020-05-18T21:54:05.415842Z",
    "name": "Red Hat Virtualization",
    "description": "",
    "kind": "cloud",
    "namespace": "rhv",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "host",
          "label": "Host (Authentication URL)",
          "type": "string",
          "help_text": "The host to authenticate with."
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        },
        {
          "id": "ca_file",
          "label": "CA File",
          "type": "string",
          "help_text": "Absolute file path to the CA file to use (optional)"
        }
      ],
      "required": ["host", "username", "password"]
    },
    "injectors": {
      "file": {
        "template": "[ovirt]\novirt_url={{host}}\novirt_username={{username}}\novirt_password={{password}}\n{% if ca_file %}ovirt_ca_file={{ca_file}}{% endif %}"
      },
      "env": {
        "OVIRT_INI_PATH": "{{tower.filename}}",
        "OVIRT_URL": "{{host}}",
        "OVIRT_USERNAME": "{{username}}",
        "OVIRT_PASSWORD": "{{password}}"
      }
    }
  },
  {
    "id": 7,
    "type": "credential_type",
    "url": "/api/v2/credential_types/7/",
    "related": {
      "credentials": "/api/v2/credential_types/7/credentials/",
      "activity_stream": "/api/v2/credential_types/7/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.194625Z",
    "modified": "2020-05-18T21:54:05.362610Z",
    "name": "VMware vCenter",
    "description": "",
    "kind": "cloud",
    "namespace": "vmware",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "host",
          "label": "VCenter Host",
          "type": "string",
          "help_text": "Enter the hostname or IP address that corresponds to your VMware vCenter."
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        }
      ],
      "required": ["host", "username", "password"]
    },
    "injectors": {}
  },
  {
    "id": 18,
    "type": "credential_type",
    "url": "/api/v2/credential_types/18/",
    "related": {
      "credentials": "/api/v2/credential_types/18/credentials/",
      "activity_stream": "/api/v2/credential_types/18/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.370730Z",
    "modified": "2020-05-18T21:54:05.436400Z",
    "name": "CyberArk AIM Central Credential Provider Lookup",
    "description": "",
    "kind": "external",
    "namespace": "aim",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "url",
          "label": "CyberArk AIM URL",
          "type": "string",
          "format": "url"
        },
        {
          "id": "app_id",
          "label": "Application ID",
          "type": "string",
          "secret": true
        },
        {
          "id": "client_key",
          "label": "Client Key",
          "type": "string",
          "secret": true,
          "multiline": true
        },
        {
          "id": "client_cert",
          "label": "Client Certificate",
          "type": "string",
          "secret": true,
          "multiline": true
        },
        {
          "id": "verify",
          "label": "Verify SSL Certificates",
          "type": "boolean",
          "default": true
        }
      ],
      "metadata": [
        {
          "id": "object_query",
          "label": "Object Query",
          "type": "string",
          "help_text": "Lookup query for the object. Ex: Safe=TestSafe;Object=testAccountName123"
        },
        {
          "id": "object_query_format",
          "label": "Object Query Format",
          "type": "string",
          "default": "Exact",
          "choices": ["Exact", "Regexp"]
        },
        {
          "id": "reason",
          "label": "Reason",
          "type": "string",
          "help_text": "Object request reason. This is only needed if it is required by the object's policy."
        }
      ],
      "required": ["url", "app_id", "object_query"]
    },
    "injectors": {}
  },
  {
    "id": 20,
    "type": "credential_type",
    "url": "/api/v2/credential_types/20/",
    "related": {
      "credentials": "/api/v2/credential_types/20/credentials/",
      "activity_stream": "/api/v2/credential_types/20/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.398260Z",
    "modified": "2020-05-18T21:54:05.451444Z",
    "name": "CyberArk Conjur Secret Lookup",
    "description": "",
    "kind": "external",
    "namespace": "conjur",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "url",
          "label": "Conjur URL",
          "type": "string",
          "format": "url"
        },
        {
          "id": "api_key",
          "label": "API Key",
          "type": "string",
          "secret": true
        },
        {
          "id": "account",
          "label": "Account",
          "type": "string"
        },
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "cacert",
          "label": "Public Key Certificate",
          "type": "string",
          "multiline": true
        }
      ],
      "metadata": [
        {
          "id": "secret_path",
          "label": "Secret Identifier",
          "type": "string",
          "help_text": "The identifier for the secret e.g., /some/identifier"
        },
        {
          "id": "secret_version",
          "label": "Secret Version",
          "type": "string",
          "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
        }
      ],
      "required": ["url", "api_key", "account", "username"]
    },
    "injectors": {}
  },
  {
    "id": 21,
    "type": "credential_type",
    "url": "/api/v2/credential_types/21/",
    "related": {
      "credentials": "/api/v2/credential_types/21/credentials/",
      "activity_stream": "/api/v2/credential_types/21/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.422968Z",
    "modified": "2020-05-18T21:54:05.459711Z",
    "name": "HashiCorp Vault Secret Lookup",
    "description": "",
    "kind": "external",
    "namespace": "hashivault_kv",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "url",
          "label": "Server URL",
          "type": "string",
          "format": "url",
          "help_text": "The URL to the HashiCorp Vault"
        },
        {
          "id": "token",
          "label": "Token",
          "type": "string",
          "secret": true,
          "help_text": "The access token used to authenticate to the Vault server"
        },
        {
          "id": "cacert",
          "label": "CA Certificate",
          "type": "string",
          "multiline": true,
          "help_text": "The CA certificate used to verify the SSL certificate of the Vault server"
        },
        {
          "id": "role_id",
          "label": "AppRole role_id",
          "type": "string",
          "multiline": false,
          "help_text": "The Role ID for AppRole Authentication"
        },
        {
          "id": "secret_id",
          "label": "AppRole secret_id",
          "type": "string",
          "multiline": false,
          "secret": true,
          "help_text": "The Secret ID for AppRole Authentication"
        },
        {
          "id": "api_version",
          "label": "API Version",
          "choices": ["v1", "v2"],
          "help_text": "API v1 is for static key/value lookups.  API v2 is for versioned key/value lookups.",
          "default": "v1"
        }
      ],
      "metadata": [
        {
          "id": "secret_backend",
          "label": "Name of Secret Backend",
          "type": "string",
          "help_text": "The name of the kv secret backend (if left empty, the first segment of the secret path will be used)."
        },
        {
          "id": "secret_path",
          "label": "Path to Secret",
          "type": "string",
          "help_text": "The path to the secret stored in the secret backend e.g, /some/secret/"
        },
        {
          "id": "auth_path",
          "label": "Path to Auth",
          "type": "string",
          "help_text": "The path where the Authentication method is mounted e.g, approle"
        },
        {
          "id": "secret_key",
          "label": "Key Name",
          "type": "string",
          "help_text": "The name of the key to look up in the secret."
        },
        {
          "id": "secret_version",
          "label": "Secret Version (v2 only)",
          "type": "string",
          "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
        }
      ],
      "required": ["url", "secret_path", "api_version", "secret_key"]
    },
    "injectors": {}
  },
  {
    "id": 22,
    "type": "credential_type",
    "url": "/api/v2/credential_types/22/",
    "related": {
      "credentials": "/api/v2/credential_types/22/credentials/",
      "activity_stream": "/api/v2/credential_types/22/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.437779Z",
    "modified": "2020-05-18T21:54:05.472241Z",
    "name": "HashiCorp Vault Signed SSH",
    "description": "",
    "kind": "external",
    "namespace": "hashivault_ssh",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "url",
          "label": "Server URL",
          "type": "string",
          "format": "url",
          "help_text": "The URL to the HashiCorp Vault"
        },
        {
          "id": "token",
          "label": "Token",
          "type": "string",
          "secret": true,
          "help_text": "The access token used to authenticate to the Vault server"
        },
        {
          "id": "cacert",
          "label": "CA Certificate",
          "type": "string",
          "multiline": true,
          "help_text": "The CA certificate used to verify the SSL certificate of the Vault server"
        },
        {
          "id": "role_id",
          "label": "AppRole role_id",
          "type": "string",
          "multiline": false,
          "help_text": "The Role ID for AppRole Authentication"
        },
        {
          "id": "secret_id",
          "label": "AppRole secret_id",
          "type": "string",
          "multiline": false,
          "secret": true,
          "help_text": "The Secret ID for AppRole Authentication"
        }
      ],
      "metadata": [
        {
          "id": "public_key",
          "label": "Unsigned Public Key",
          "type": "string",
          "multiline": true
        },
        {
          "id": "secret_path",
          "label": "Path to Secret",
          "type": "string",
          "help_text": "The path to the secret stored in the secret backend e.g, /some/secret/"
        },
        {
          "id": "auth_path",
          "label": "Path to Auth",
          "type": "string",
          "help_text": "The path where the Authentication method is mounted e.g, approle"
        },
        {
          "id": "role",
          "label": "Role Name",
          "type": "string",
          "help_text": "The name of the role used to sign."
        },
        {
          "id": "valid_principals",
          "label": "Valid Principals",
          "type": "string",
          "help_text": "Valid principals (either usernames or hostnames) that the certificate should be signed for."
        }
      ],
      "required": ["url", "secret_path", "public_key", "role"]
    },
    "injectors": {}
  },
  {
    "id": 19,
    "type": "credential_type",
    "url": "/api/v2/credential_types/19/",
    "related": {
      "credentials": "/api/v2/credential_types/19/credentials/",
      "activity_stream": "/api/v2/credential_types/19/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.384608Z",
    "modified": "2020-05-18T21:54:05.443806Z",
    "name": "Microsoft Azure Key Vault",
    "description": "",
    "kind": "external",
    "namespace": "azure_kv",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "url",
          "label": "Vault URL (DNS Name)",
          "type": "string",
          "format": "url"
        },
        {
          "id": "client",
          "label": "Client ID",
          "type": "string"
        },
        {
          "id": "secret",
          "label": "Client Secret",
          "type": "string",
          "secret": true
        },
        {
          "id": "tenant",
          "label": "Tenant ID",
          "type": "string"
        },
        {
          "id": "cloud_name",
          "label": "Cloud Environment",
          "help_text": "Specify which azure cloud environment to use.",
          "choices": [
            "AzureUSGovernment",
            "AzureCloud",
            "AzureChinaCloud",
            "AzureGermanCloud"
          ],
          "default": "AzureCloud"
        }
      ],
      "metadata": [
        {
          "id": "secret_field",
          "label": "Secret Name",
          "type": "string",
          "help_text": "The name of the secret to look up."
        },
        {
          "id": "secret_version",
          "label": "Secret Version",
          "type": "string",
          "help_text": "Used to specify a specific secret version (if left empty, the latest version will be used)."
        }
      ],
      "required": ["url", "client", "secret", "tenant", "secret_field"]
    },
    "injectors": {}
  },
  {
    "id": 14,
    "type": "credential_type",
    "url": "/api/v2/credential_types/14/",
    "related": {
      "credentials": "/api/v2/credential_types/14/credentials/",
      "activity_stream": "/api/v2/credential_types/14/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.306541Z",
    "modified": "2020-05-18T21:54:05.409381Z",
    "name": "Insights",
    "description": "",
    "kind": "insights",
    "namespace": "insights",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        }
      ],
      "required": ["username", "password"]
    },
    "injectors": {
      "extra_vars": {
        "scm_username": "{{username}}",
        "scm_password": "{{password}}"
      }
    }
  },
  {
    "id": 17,
    "type": "credential_type",
    "url": "/api/v2/credential_types/17/",
    "related": {
      "credentials": "/api/v2/credential_types/17/credentials/",
      "activity_stream": "/api/v2/credential_types/17/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.356431Z",
    "modified": "2020-05-18T21:54:05.430264Z",
    "name": "OpenShift or Kubernetes API Bearer Token",
    "description": "",
    "kind": "kubernetes",
    "namespace": "kubernetes_bearer_token",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "host",
          "label": "OpenShift or Kubernetes API Endpoint",
          "type": "string",
          "help_text": "The OpenShift or Kubernetes API Endpoint to authenticate with."
        },
        {
          "id": "bearer_token",
          "label": "API authentication bearer token",
          "type": "string",
          "secret": true
        },
        {
          "id": "verify_ssl",
          "label": "Verify SSL",
          "type": "boolean",
          "default": true
        },
        {
          "id": "ssl_ca_cert",
          "label": "Certificate Authority data",
          "type": "string",
          "secret": true,
          "multiline": true
        }
      ],
      "required": ["host", "bearer_token"]
    },
    "injectors": {}
  },
  {
    "id": 4,
    "type": "credential_type",
    "url": "/api/v2/credential_types/4/",
    "related": {
      "credentials": "/api/v2/credential_types/4/credentials/",
      "activity_stream": "/api/v2/credential_types/4/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.142889Z",
    "modified": "2020-05-18T21:54:05.341825Z",
    "name": "Network",
    "description": "",
    "kind": "net",
    "namespace": "net",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        },
        {
          "id": "ssh_key_data",
          "label": "SSH Private Key",
          "type": "string",
          "format": "ssh_private_key",
          "secret": true,
          "multiline": true
        },
        {
          "id": "ssh_key_unlock",
          "label": "Private Key Passphrase",
          "type": "string",
          "secret": true
        },
        {
          "id": "authorize",
          "label": "Authorize",
          "type": "boolean"
        },
        {
          "id": "authorize_password",
          "label": "Authorize Password",
          "type": "string",
          "secret": true
        }
      ],
      "dependencies": {
        "authorize_password": ["authorize"]
      },
      "required": ["username"]
    },
    "injectors": {}
  },
  {
    "id": 2,
    "type": "credential_type",
    "url": "/api/v2/credential_types/2/",
    "related": {
      "credentials": "/api/v2/credential_types/2/credentials/",
      "activity_stream": "/api/v2/credential_types/2/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.112580Z",
    "modified": "2020-05-18T21:54:05.324947Z",
    "name": "Source Control",
    "description": "",
    "kind": "scm",
    "namespace": "scm",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true
        },
        {
          "id": "ssh_key_data",
          "label": "SCM Private Key",
          "type": "string",
          "format": "ssh_private_key",
          "secret": true,
          "multiline": true
        },
        {
          "id": "ssh_key_unlock",
          "label": "Private Key Passphrase",
          "type": "string",
          "secret": true
        }
      ]
    },
    "injectors": {}
  },
  {
    "id": 1,
    "type": "credential_type",
    "url": "/api/v2/credential_types/1/",
    "related": {
      "credentials": "/api/v2/credential_types/1/credentials/",
      "activity_stream": "/api/v2/credential_types/1/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.092707Z",
    "modified": "2020-05-18T21:54:05.314415Z",
    "name": "Machine",
    "description": "",
    "kind": "ssh",
    "namespace": "ssh",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "username",
          "label": "Username",
          "type": "string"
        },
        {
          "id": "password",
          "label": "Password",
          "type": "string",
          "secret": true,
          "ask_at_runtime": true
        },
        {
          "id": "ssh_key_data",
          "label": "SSH Private Key",
          "type": "string",
          "format": "ssh_private_key",
          "secret": true,
          "multiline": true
        },
        {
          "id": "ssh_public_key_data",
          "label": "Signed SSH Certificate",
          "type": "string",
          "multiline": true,
          "secret": true
        },
        {
          "id": "ssh_key_unlock",
          "label": "Private Key Passphrase",
          "type": "string",
          "secret": true,
          "ask_at_runtime": true
        },
        {
          "id": "become_method",
          "label": "Privilege Escalation Method",
          "type": "string",
          "help_text": "Specify a method for \"become\" operations. This is equivalent to specifying the --become-method Ansible parameter."
        },
        {
          "id": "become_username",
          "label": "Privilege Escalation Username",
          "type": "string"
        },
        {
          "id": "become_password",
          "label": "Privilege Escalation Password",
          "type": "string",
          "secret": true,
          "ask_at_runtime": true
        }
      ]
    },
    "injectors": {}
  },
  {
    "id": 12,
    "type": "credential_type",
    "url": "/api/v2/credential_types/12/",
    "related": {
      "credentials": "/api/v2/credential_types/12/credentials/",
      "activity_stream": "/api/v2/credential_types/12/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.276032Z",
    "modified": "2020-05-18T21:54:05.395920Z",
    "name": "GitHub Personal Access Token",
    "description": "",
    "kind": "token",
    "namespace": "github_token",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "token",
          "label": "Token",
          "type": "string",
          "secret": true,
          "help_text": "This token needs to come from your profile settings in GitHub"
        }
      ],
      "required": ["token"]
    },
    "injectors": {}
  },
  {
    "id": 13,
    "type": "credential_type",
    "url": "/api/v2/credential_types/13/",
    "related": {
      "credentials": "/api/v2/credential_types/13/credentials/",
      "activity_stream": "/api/v2/credential_types/13/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.285972Z",
    "modified": "2020-05-18T21:54:05.402347Z",
    "name": "GitLab Personal Access Token",
    "description": "",
    "kind": "token",
    "namespace": "gitlab_token",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "token",
          "label": "Token",
          "type": "string",
          "secret": true,
          "help_text": "This token needs to come from your profile settings in GitLab"
        }
      ],
      "required": ["token"]
    },
    "injectors": {}
  },
  {
    "id": 3,
    "type": "credential_type",
    "url": "/api/v2/credential_types/3/",
    "related": {
      "credentials": "/api/v2/credential_types/3/credentials/",
      "activity_stream": "/api/v2/credential_types/3/activity_stream/"
    },
    "summary_fields": {
      "user_capabilities": {
        "edit": false,
        "delete": false
      }
    },
    "created": "2020-05-18T21:53:35.126565Z",
    "modified": "2020-05-18T21:54:05.334941Z",
    "name": "Vault",
    "description": "",
    "kind": "vault",
    "namespace": "vault",
    "managed_by_tower": true,
    "inputs": {
      "fields": [
        {
          "id": "vault_password",
          "label": "Vault Password",
          "type": "string",
          "secret": true,
          "ask_at_runtime": true
        },
        {
          "id": "vault_id",
          "label": "Vault Identifier",
          "type": "string",
          "format": "vault_id",
          "help_text": "Specify an (optional) Vault ID. This is equivalent to specifying the --vault-id Ansible parameter for providing multiple Vault passwords.  Note: this feature only works in Ansible 2.4+."
        }
      ],
      "required": ["vault_password"]
    },
    "injectors": {}
  },
  {
    "id": 42,
    "type": "credential_type",
    "url": "/api/v2/credential_types/42/",
    "related": {
        "credentials": "/api/v2/credential_types/42/credentials/",
        "activity_stream": "/api/v2/credential_types/42/activity_stream/"
    },
    "summary_fields": {
        "user_capabilities": {
            "edit": true,
            "delete": true
        }
    },
    "created": "2020-11-11T00:18:31.928286Z",
    "modified": "2020-11-11T00:19:00.851597Z",
    "name": "Ansible Galaxy/Automation Hub API Token",
    "description": "",
    "kind": "galaxy",
    "namespace": "galaxy_api_token",
    "managed_by_tower": true,
    "inputs": {
        "fields": [
            {
                "id": "url",
                "label": "Galaxy Server URL",
                "type": "string",
                "help_text": "The URL of the Galaxy instance to connect to."
            },
            {
                "id": "auth_url",
                "label": "Auth Server URL",
                "type": "string",
                "help_text": "The URL of a Keycloak server token_endpoint, if using SSO auth."
            },
            {
                "id": "token",
                "label": "API Token",
                "type": "string",
                "secret": true,
                "help_text": "A token to use for authentication against the Galaxy instance."
            }
        ],
        "required": [
            "url"
        ]
    },
    "injectors": {}
}
]

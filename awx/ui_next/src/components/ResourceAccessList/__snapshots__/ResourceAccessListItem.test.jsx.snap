// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResourceAccessListItem /> initially renders succesfully 1`] = `
<ResourceAccessListItem
  accessRecord={
    Object {
      "first_name": "jane",
      "id": 2,
      "last_name": "brown",
      "summary_fields": Object {
        "direct_access": Array [
          Object {
            "role": Object {
              "id": 3,
              "name": "Member",
              "resource_name": "Org",
              "resource_type": "organization",
              "team_id": 5,
              "team_name": "The Team",
              "user_capabilities": Object {
                "unattach": true,
              },
            },
          },
        ],
        "indirect_access": Array [],
      },
      "url": "/bar",
      "username": "jane",
    }
  }
  i18n={"/i18n/"}
  onRoleDelete={[Function]}
>
  <DataListItem
    aria-labelledby="access-list-item"
    key="2"
  >
    <li
      aria-labelledby="access-list-item"
      className="pf-c-data-list__item"
    >
      <DataListItemRow
        key=".0"
        rowid="access-list-item"
      >
        <div
          className="pf-c-data-list__item-row"
        >
          <ResourceAccessListItem__DataListItemCells
            dataListCells={
              Array [
                <DataListCell>
                  <TextContent>
                    <Text
                      component="h6"
                    >
                      <ForwardRef
                        to={
                          Object {
                            "pathname": "/bar",
                          }
                        }
                      >
                        jane
                      </ForwardRef>
                    </Text>
                  </TextContent>
                  <ForwardRef
                    stacked={true}
                  >
                    <Detail
                      fullWidth={false}
                      label="Name"
                      value="jane brown"
                    />
                  </ForwardRef>
                </DataListCell>,
                <DataListCell>
                  <ForwardRef
                    stacked={true}
                  >
                    <Detail
                      fullWidth={false}
                      label="Team Roles"
                      value={
                        <ForwardRef
                          numChips={5}
                        >
                          <ForwardRef
                            isReadOnly={false}
                            onClick={[Function]}
                          >
                            Member
                          </ForwardRef>
                        </ForwardRef>
                      }
                    />
                  </ForwardRef>
                </DataListCell>,
              ]
            }
            key=".0"
            rowid="access-list-item"
          >
            <StyledComponent
              dataListCells={
                Array [
                  <DataListCell>
                    <TextContent>
                      <Text
                        component="h6"
                      >
                        <ForwardRef
                          to={
                            Object {
                              "pathname": "/bar",
                            }
                          }
                        >
                          jane
                        </ForwardRef>
                      </Text>
                    </TextContent>
                    <ForwardRef
                      stacked={true}
                    >
                      <Detail
                        fullWidth={false}
                        label="Name"
                        value="jane brown"
                      />
                    </ForwardRef>
                  </DataListCell>,
                  <DataListCell>
                    <ForwardRef
                      stacked={true}
                    >
                      <Detail
                        fullWidth={false}
                        label="Team Roles"
                        value={
                          <ForwardRef
                            numChips={5}
                          >
                            <ForwardRef
                              isReadOnly={false}
                              onClick={[Function]}
                            >
                              Member
                            </ForwardRef>
                          </ForwardRef>
                        }
                      />
                    </ForwardRef>
                  </DataListCell>,
                ]
              }
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "ResourceAccessListItem__DataListItemCells-a3r9sq-0",
                    "isStatic": true,
                    "lastClassName": "WzRoT",
                    "rules": Array [
                      "align-items:start;",
                    ],
                  },
                  "displayName": "ResourceAccessListItem__DataListItemCells",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "ResourceAccessListItem__DataListItemCells-a3r9sq-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              rowid="access-list-item"
            >
              <DataListItemCells
                className="ResourceAccessListItem__DataListItemCells-a3r9sq-0 WzRoT"
                dataListCells={
                  Array [
                    <DataListCell>
                      <TextContent>
                        <Text
                          component="h6"
                        >
                          <ForwardRef
                            to={
                              Object {
                                "pathname": "/bar",
                              }
                            }
                          >
                            jane
                          </ForwardRef>
                        </Text>
                      </TextContent>
                      <ForwardRef
                        stacked={true}
                      >
                        <Detail
                          fullWidth={false}
                          label="Name"
                          value="jane brown"
                        />
                      </ForwardRef>
                    </DataListCell>,
                    <DataListCell>
                      <ForwardRef
                        stacked={true}
                      >
                        <Detail
                          fullWidth={false}
                          label="Team Roles"
                          value={
                            <ForwardRef
                              numChips={5}
                            >
                              <ForwardRef
                                isReadOnly={false}
                                onClick={[Function]}
                              >
                                Member
                              </ForwardRef>
                            </ForwardRef>
                          }
                        />
                      </ForwardRef>
                    </DataListCell>,
                  ]
                }
                rowid="access-list-item"
              >
                <div
                  className="pf-c-data-list__item-content ResourceAccessListItem__DataListItemCells-a3r9sq-0 WzRoT"
                >
                  <DataListCell
                    key="name"
                  >
                    <div
                      className="pf-c-data-list__cell"
                    >
                      <TextContent>
                        <div
                          className="pf-c-content"
                        >
                          <Text
                            component="h6"
                          >
                            <h6
                              className=""
                              data-pf-content={true}
                            >
                              <Styled(Link)
                                to={
                                  Object {
                                    "pathname": "/bar",
                                  }
                                }
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": true,
                                        "lastClassName": "fqQVUT",
                                        "rules": Array [
                                          "font-weight: bold",
                                        ],
                                      },
                                      "displayName": "Styled(Link)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  to={
                                    Object {
                                      "pathname": "/bar",
                                    }
                                  }
                                >
                                  <Link
                                    className="sc-bdVaJa fqQVUT"
                                    to={
                                      Object {
                                        "pathname": "/bar",
                                      }
                                    }
                                  >
                                    <LinkAnchor
                                      className="sc-bdVaJa fqQVUT"
                                      href="/bar"
                                      navigate={[Function]}
                                    >
                                      <a
                                        className="sc-bdVaJa fqQVUT"
                                        href="/bar"
                                        onClick={[Function]}
                                      >
                                        jane
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </StyledComponent>
                              </Styled(Link)>
                            </h6>
                          </Text>
                        </div>
                      </TextContent>
                      <DetailList
                        stacked={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "DetailList-sc-12g7m4-0",
                                "isStatic": false,
                                "lastClassName": "eYaZBv",
                                "rules": Array [
                                  "display:grid;grid-gap:20px;align-items:flex-start;",
                                  [Function],
                                ],
                              },
                              "displayName": "DetailList",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "DetailList-sc-12g7m4-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          stacked={true}
                        >
                          <DetailList
                            className="DetailList-sc-12g7m4-0 eYaZBv"
                            stacked={true}
                          >
                            <TextList
                              className="DetailList-sc-12g7m4-0 eYaZBv"
                              component="dl"
                            >
                              <dl
                                className="DetailList-sc-12g7m4-0 eYaZBv"
                                data-pf-content={true}
                              >
                                <Detail
                                  fullWidth={false}
                                  label="Name"
                                  value="jane brown"
                                >
                                  <Detail__DetailName
                                    component="dt"
                                    data-cy={null}
                                    fullWidth={false}
                                  >
                                    <StyledComponent
                                      component="dt"
                                      data-cy={null}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Detail__DetailName-sc-16ypsyv-0",
                                            "isStatic": false,
                                            "lastClassName": "erdIBg",
                                            "rules": Array [
                                              "font-weight:var(--pf-global--FontWeight--bold);",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Detail__DetailName",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Detail__DetailName-sc-16ypsyv-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      fullWidth={false}
                                    >
                                      <Component
                                        className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                        component="dt"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <TextListItem
                                          className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                          component="dt"
                                          data-cy={null}
                                        >
                                          <dt
                                            className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                            data-cy={null}
                                            data-pf-content={true}
                                          >
                                            Name
                                          </dt>
                                        </TextListItem>
                                      </Component>
                                    </StyledComponent>
                                  </Detail__DetailName>
                                  <Detail__DetailValue
                                    component="dd"
                                    data-cy={null}
                                    fullWidth={false}
                                  >
                                    <StyledComponent
                                      component="dd"
                                      data-cy={null}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Detail__DetailValue-sc-16ypsyv-1",
                                            "isStatic": false,
                                            "lastClassName": "yHlYM",
                                            "rules": Array [
                                              "word-break:break-all;",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Detail__DetailValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Detail__DetailValue-sc-16ypsyv-1",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      fullWidth={false}
                                    >
                                      <Component
                                        className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                        component="dd"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <TextListItem
                                          className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                          component="dd"
                                          data-cy={null}
                                        >
                                          <dd
                                            className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                            data-cy={null}
                                            data-pf-content={true}
                                          >
                                            jane brown
                                          </dd>
                                        </TextListItem>
                                      </Component>
                                    </StyledComponent>
                                  </Detail__DetailValue>
                                </Detail>
                              </dl>
                            </TextList>
                          </DetailList>
                        </StyledComponent>
                      </DetailList>
                    </div>
                  </DataListCell>
                  <DataListCell
                    key="roles"
                  >
                    <div
                      className="pf-c-data-list__cell"
                    >
                      <DetailList
                        stacked={true}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "DetailList-sc-12g7m4-0",
                                "isStatic": false,
                                "lastClassName": "eYaZBv",
                                "rules": Array [
                                  "display:grid;grid-gap:20px;align-items:flex-start;",
                                  [Function],
                                ],
                              },
                              "displayName": "DetailList",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "DetailList-sc-12g7m4-0",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          stacked={true}
                        >
                          <DetailList
                            className="DetailList-sc-12g7m4-0 eYaZBv"
                            stacked={true}
                          >
                            <TextList
                              className="DetailList-sc-12g7m4-0 eYaZBv"
                              component="dl"
                            >
                              <dl
                                className="DetailList-sc-12g7m4-0 eYaZBv"
                                data-pf-content={true}
                              >
                                <Detail
                                  fullWidth={false}
                                  label="Team Roles"
                                  value={
                                    <ForwardRef
                                      numChips={5}
                                    >
                                      <ForwardRef
                                        isReadOnly={false}
                                        onClick={[Function]}
                                      >
                                        Member
                                      </ForwardRef>
                                    </ForwardRef>
                                  }
                                >
                                  <Detail__DetailName
                                    component="dt"
                                    data-cy={null}
                                    fullWidth={false}
                                  >
                                    <StyledComponent
                                      component="dt"
                                      data-cy={null}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Detail__DetailName-sc-16ypsyv-0",
                                            "isStatic": false,
                                            "lastClassName": "erdIBg",
                                            "rules": Array [
                                              "font-weight:var(--pf-global--FontWeight--bold);",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Detail__DetailName",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Detail__DetailName-sc-16ypsyv-0",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      fullWidth={false}
                                    >
                                      <Component
                                        className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                        component="dt"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <TextListItem
                                          className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                          component="dt"
                                          data-cy={null}
                                        >
                                          <dt
                                            className="Detail__DetailName-sc-16ypsyv-0 erdIBg"
                                            data-cy={null}
                                            data-pf-content={true}
                                          >
                                            Team Roles
                                          </dt>
                                        </TextListItem>
                                      </Component>
                                    </StyledComponent>
                                  </Detail__DetailName>
                                  <Detail__DetailValue
                                    component="dd"
                                    data-cy={null}
                                    fullWidth={false}
                                  >
                                    <StyledComponent
                                      component="dd"
                                      data-cy={null}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Detail__DetailValue-sc-16ypsyv-1",
                                            "isStatic": false,
                                            "lastClassName": "yHlYM",
                                            "rules": Array [
                                              "word-break:break-all;",
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Detail__DetailValue",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Detail__DetailValue-sc-16ypsyv-1",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      fullWidth={false}
                                    >
                                      <Component
                                        className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                        component="dd"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <TextListItem
                                          className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                          component="dd"
                                          data-cy={null}
                                        >
                                          <dd
                                            className="Detail__DetailValue-sc-16ypsyv-1 yHlYM"
                                            data-cy={null}
                                            data-pf-content={true}
                                          >
                                            <ChipGroup
                                              numChips={5}
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "ChipGroup-sc-10zu8t0-0",
                                                      "isStatic": true,
                                                      "lastClassName": "bwbBYO",
                                                      "rules": Array [
                                                        "--pf-c-chip-group--c-chip--MarginRight:10px;--pf-c-chip-group--c-chip--MarginBottom:10px;> .pf-c-chip.pf-m-overflow .pf-c-button{--pf-c-button--PaddingTop:3px;--pf-c-button--PaddingBottom:3px;--pf-c-chip--m-overflow--c-button--PaddingLeft:8px;--pf-c-chip--m-overflow--c-button--PaddingRight:8px;}",
                                                      ],
                                                    },
                                                    "displayName": "ChipGroup",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "ChipGroup-sc-10zu8t0-0",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                numChips={5}
                                              >
                                                <ChipGroup
                                                  className="ChipGroup-sc-10zu8t0-0 bwbBYO"
                                                  collapsedText="\${remaining} more"
                                                  defaultIsOpen={false}
                                                  expandedText="Show Less"
                                                  numChips={5}
                                                  withToolbar={false}
                                                >
                                                  <ul
                                                    className="pf-c-chip-group ChipGroup-sc-10zu8t0-0 bwbBYO"
                                                  >
                                                    <InnerChipGroup
                                                      className="ChipGroup-sc-10zu8t0-0 bwbBYO"
                                                      collapsedText="\${remaining} more"
                                                      defaultIsOpen={false}
                                                      expandedText="Show Less"
                                                      isOpen={false}
                                                      numChips={5}
                                                      onToggleCollapse={[Function]}
                                                      withToolbar={false}
                                                    >
                                                      <Chip
                                                        component="li"
                                                        isReadOnly={false}
                                                        key=".$3"
                                                        onClick={[Function]}
                                                      >
                                                        <StyledComponent
                                                          component="li"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Chip-sc-1rzr8oo-0",
                                                                "isStatic": true,
                                                                "lastClassName": "iczEeI",
                                                                "rules": Array [
                                                                  "--pf-c-chip--m-read-only--PaddingTop:3px;--pf-c-chip--m-read-only--PaddingBottom:3px;--pf-c-chip--m-read-only--PaddingLeft:8px;--pf-c-chip--m-read-only--PaddingRight:8px;.pf-c-button{--pf-c-button--PaddingTop:3px;--pf-c-button--PaddingBottom:3px;--pf-c-button--PaddingLeft:8px;--pf-c-button--PaddingRight:8px;}",
                                                                ],
                                                              },
                                                              "displayName": "Chip",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Chip-sc-1rzr8oo-0",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isReadOnly={false}
                                                          onClick={[Function]}
                                                        >
                                                          <PFChip
                                                            className="Chip-sc-1rzr8oo-0 iczEeI"
                                                            component="li"
                                                            isReadOnly={false}
                                                            onClick={[Function]}
                                                          >
                                                            <ComponentWithOuia
                                                              component={[Function]}
                                                              componentProps={
                                                                Object {
                                                                  "children": "Member",
                                                                  "className": "Chip-sc-1rzr8oo-0 iczEeI",
                                                                  "component": "li",
                                                                  "isReadOnly": false,
                                                                  "onClick": [Function],
                                                                }
                                                              }
                                                              consumerContext={null}
                                                            >
                                                              <Chip
                                                                className="Chip-sc-1rzr8oo-0 iczEeI"
                                                                closeBtnAriaLabel="close"
                                                                component="li"
                                                                isOverflowChip={false}
                                                                isReadOnly={false}
                                                                onClick={[Function]}
                                                                ouiaContext={
                                                                  Object {
                                                                    "isOuia": false,
                                                                    "ouiaId": null,
                                                                  }
                                                                }
                                                                tooltipPosition="top"
                                                              >
                                                                <GenerateId
                                                                  prefix="pf-random-id-"
                                                                >
                                                                  <li
                                                                    className="pf-c-chip Chip-sc-1rzr8oo-0 iczEeI"
                                                                  >
                                                                    <span
                                                                      className="pf-c-chip__text"
                                                                      id="pf-random-id-0"
                                                                    >
                                                                      Member
                                                                    </span>
                                                                    <ChipButton
                                                                      aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                      ariaLabel="close"
                                                                      id="remove_pf-random-id-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <Component
                                                                        aria-label="close"
                                                                        aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                        className=""
                                                                        id="remove_pf-random-id-0"
                                                                        onClick={[Function]}
                                                                        variant="plain"
                                                                      >
                                                                        <ComponentWithOuia
                                                                          component={[Function]}
                                                                          componentProps={
                                                                            Object {
                                                                              "aria-label": "close",
                                                                              "aria-labelledby": "remove_pf-random-id-0 pf-random-id-0",
                                                                              "children": <TimesCircleIcon
                                                                                aria-hidden="true"
                                                                                color="currentColor"
                                                                                noVerticalAlign={false}
                                                                                size="sm"
                                                                                title={null}
                                                                              />,
                                                                              "className": "",
                                                                              "id": "remove_pf-random-id-0",
                                                                              "onClick": [Function],
                                                                              "variant": "plain",
                                                                            }
                                                                          }
                                                                          consumerContext={
                                                                            Object {
                                                                              "isOuia": false,
                                                                              "ouiaId": null,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            aria-label="close"
                                                                            aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                            className=""
                                                                            id="remove_pf-random-id-0"
                                                                            onClick={[Function]}
                                                                            ouiaContext={
                                                                              Object {
                                                                                "isOuia": false,
                                                                                "ouiaId": null,
                                                                              }
                                                                            }
                                                                            variant="plain"
                                                                          >
                                                                            <button
                                                                              aria-disabled={null}
                                                                              aria-label="close"
                                                                              aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                              className="pf-c-button pf-m-plain"
                                                                              disabled={false}
                                                                              id="remove_pf-random-id-0"
                                                                              onClick={[Function]}
                                                                              tabIndex={null}
                                                                              type="button"
                                                                            >
                                                                              <TimesCircleIcon
                                                                                aria-hidden="true"
                                                                                color="currentColor"
                                                                                noVerticalAlign={false}
                                                                                size="sm"
                                                                                title={null}
                                                                              >
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  aria-labelledby={null}
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style={
                                                                                    Object {
                                                                                      "verticalAlign": "-0.125em",
                                                                                    }
                                                                                  }
                                                                                  viewBox="0 0 512 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                                    transform=""
                                                                                  />
                                                                                </svg>
                                                                              </TimesCircleIcon>
                                                                            </button>
                                                                          </Button>
                                                                        </ComponentWithOuia>
                                                                      </Component>
                                                                    </ChipButton>
                                                                  </li>
                                                                </GenerateId>
                                                              </Chip>
                                                            </ComponentWithOuia>
                                                          </PFChip>
                                                        </StyledComponent>
                                                      </Chip>
                                                    </InnerChipGroup>
                                                  </ul>
                                                </ChipGroup>
                                              </StyledComponent>
                                            </ChipGroup>
                                          </dd>
                                        </TextListItem>
                                      </Component>
                                    </StyledComponent>
                                  </Detail__DetailValue>
                                </Detail>
                              </dl>
                            </TextList>
                          </DetailList>
                        </StyledComponent>
                      </DetailList>
                    </div>
                  </DataListCell>
                </div>
              </DataListItemCells>
            </StyledComponent>
          </ResourceAccessListItem__DataListItemCells>
        </div>
      </DataListItemRow>
    </li>
  </DataListItem>
</ResourceAccessListItem>
`;

# Generated by Django 2.2.16 on 2021-01-13 20:37

import awx.main.fields
import awx.main.models.notifications
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0123_drop_hg_support'),
    ]

    operations = [
        migrations.AddField(
            model_name='project',
            name='sync_assets',
            field=models.BooleanField(default=False, editable=True, help_text='When syncing the assets, load Tower assets from the projects assets folder.'),
        ),
        migrations.AddField(
            model_name='project',
            name='export_role',
            field=awx.main.fields.ImplicitRoleField(related_name='+', parent_role='admin_role', to='main.Role', null='True'),
        ),
        migrations.CreateModel(
            name='ProjectExport',
            fields=[
                ('unifiedjob_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.UnifiedJob')),
                ('local_path', models.CharField(blank=True, help_text='Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.', max_length=1024)),
                ('scm_type', models.CharField(blank=True, choices=[('', 'Manual'), ('git', 'Git'), ('svn', 'Subversion'), ('insights', 'Red Hat Insights'), ('archive', 'Remote Archive')], default='', help_text='Specifies the source control system used to store the project.', max_length=8, verbose_name='SCM Type')),
                ('scm_url', models.CharField(blank=True, default='', help_text='The location where the project is stored.', max_length=1024, verbose_name='SCM URL')),
                ('scm_branch', models.CharField(blank=True, default='', help_text='Specific branch, tag or commit to checkout.', max_length=256, verbose_name='SCM Branch')),
                ('scm_refspec', models.CharField(blank=True, default='', help_text='For git projects, an additional refspec to fetch.', max_length=1024, verbose_name='SCM refspec')),
                ('scm_clean', models.BooleanField(default=False, help_text='Discard any local changes before syncing the project.')),
                ('scm_delete_on_update', models.BooleanField(default=False, help_text='Delete the project before syncing.')),
                ('timeout', models.IntegerField(blank=True, default=0, help_text='The amount of time (in seconds) to run before the task is canceled.')),
                ('job_type', models.CharField(choices=[('run', 'Run'), ('check', 'Check')], default='check', max_length=64)),
                ('job_tags', models.CharField(blank=True, default='', help_text='Parts of the project export playbook that will be run.', max_length=1024)),
                ('scm_revision', models.CharField(blank=True, default='', editable=False, help_text='The SCM Revision returned by this export for the given project and branch.', max_length=1024, verbose_name='SCM Revision')),
                ('credential', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projectexports', to='main.Credential')),
                ('project', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='project_exports', to='main.Project')),
                ('commit_message', models.CharField(default='', editable=False, help_text='The commit message for this project export.', max_length=1024, verbose_name='Commit Message')),
                ('job_template_ids', awx.main.fields.JSONField(default=[], editable=False, help_text='List of job tempaltes ids to export', verbose_name='Job Template IDs')),
            ],
            bases=('main.unifiedjob', awx.main.models.notifications.JobNotificationMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProjectExportEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', models.DateTimeField(default=None, editable=False)),
                ('event', models.CharField(choices=[('runner_on_failed', 'Host Failed'), ('runner_on_start', 'Host Started'), ('runner_on_ok', 'Host OK'), ('runner_on_error', 'Host Failure'), ('runner_on_skipped', 'Host Skipped'), ('runner_on_unreachable', 'Host Unreachable'), ('runner_on_no_hosts', 'No Hosts Remaining'), ('runner_on_async_poll', 'Host Polling'), ('runner_on_async_ok', 'Host Async OK'), ('runner_on_async_failed', 'Host Async Failure'), ('runner_item_on_ok', 'Item OK'), ('runner_item_on_failed', 'Item Failed'), ('runner_item_on_skipped', 'Item Skipped'), ('runner_retry', 'Host Retry'), ('runner_on_file_diff', 'File Difference'), ('playbook_on_start', 'Playbook Started'), ('playbook_on_notify', 'Running Handlers'), ('playbook_on_include', 'Including File'), ('playbook_on_no_hosts_matched', 'No Hosts Matched'), ('playbook_on_no_hosts_remaining', 'No Hosts Remaining'), ('playbook_on_task_start', 'Task Started'), ('playbook_on_vars_prompt', 'Variables Prompted'), ('playbook_on_setup', 'Gathering Facts'), ('playbook_on_import_for_host', 'internal: on Import for Host'), ('playbook_on_not_import_for_host', 'internal: on Not Import for Host'), ('playbook_on_play_start', 'Play Started'), ('playbook_on_stats', 'Playbook Complete'), ('debug', 'Debug'), ('verbose', 'Verbose'), ('deprecated', 'Deprecated'), ('warning', 'Warning'), ('system_warning', 'System Warning'), ('error', 'Error')], max_length=100)),
                ('event_data', awx.main.fields.JSONField(blank=True, default=dict)),
                ('failed', models.BooleanField(default=False, editable=False)),
                ('changed', models.BooleanField(default=False, editable=False)),
                ('uuid', models.CharField(default='', editable=False, max_length=1024)),
                ('playbook', models.CharField(default='', editable=False, max_length=1024)),
                ('play', models.CharField(default='', editable=False, max_length=1024)),
                ('role', models.CharField(default='', editable=False, max_length=1024)),
                ('task', models.CharField(default='', editable=False, max_length=1024)),
                ('counter', models.PositiveIntegerField(default=0, editable=False)),
                ('stdout', models.TextField(default='', editable=False)),
                ('verbosity', models.PositiveIntegerField(default=0, editable=False)),
                ('start_line', models.PositiveIntegerField(default=0, editable=False)),
                ('end_line', models.PositiveIntegerField(default=0, editable=False)),
                ('created', models.DateTimeField(db_index=True, default=None, editable=False, null=True)),
                ('project_export', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='project_export_events', to='main.ProjectExport')),
                ('parent_uuid', models.CharField(default='', editable=False, max_length=1024)),
            ],
            options={
                'ordering': ('pk',),
                'index_together': {('project_export', 'start_line'), ('project_export', 'end_line'), ('project_export', 'parent_uuid'), ('project_export', 'uuid'), ('project_export', 'event')},
            },
        ),
        migrations.AlterField(
            model_name='project',
            name='read_role',
            field=awx.main.fields.ImplicitRoleField(editable=False, null='True', on_delete=django.db.models.deletion.CASCADE, parent_role=['organization.auditor_role', 'singleton:system_auditor', 'use_role', 'update_role', 'export_role'], related_name='+', to='main.Role'),
        ),
        migrations.AddField(
            model_name='activitystream',
            name='project_export',
            field=models.ManyToManyField(blank=True, to='main.ProjectExport'),
        ),
    ]

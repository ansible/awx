# Generated by Django 4.2.3 on 2023-09-01 14:29

import awx.main.fields
import awx.main.utils.polymorphic
from decimal import Decimal
from django.conf import settings
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):
    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0187_hop_nodes'),
    ]

    operations = [
        migrations.AlterField(
            model_name='activitystream',
            name='actor',
            field=models.ForeignKey(
                help_text='The user who performed this action.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='activity_stream',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='changes',
            field=models.TextField(blank=True, help_text='Dictionary showing a difference, the created state, or the state prior to deletion'),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='deleted_actor',
            field=models.JSONField(help_text='Details of actor stored for the case when a user is deleted from the system', null=True),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='object1',
            field=models.TextField(help_text='Type of the first object involved in the action'),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='object2',
            field=models.TextField(help_text='Type of the second object involved in the action'),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='object_relationship_type',
            field=models.TextField(blank=True, help_text='Identifies the name of the relationship for associations and disassociations'),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='operation',
            field=models.CharField(
                choices=[
                    ('create', 'Entity Created'),
                    ('update', 'Entity Updated'),
                    ('delete', 'Entity Deleted'),
                    ('associate', 'Entity Associated with another Entity'),
                    ('disassociate', 'Entity was Disassociated with another Entity'),
                ],
                help_text='Identifies the type of REST API action',
                max_length=13,
            ),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='setting',
            field=models.JSONField(blank=True, default=dict, help_text='Details of a database setting changed in this action'),
        ),
        migrations.AlterField(
            model_name='activitystream',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp of this change'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='become_enabled',
            field=models.BooleanField(default=False, help_text='If true, passes --become to ansible-playbook for privilege escalation'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='credential',
            field=models.ForeignKey(
                default=None,
                help_text='Machine credential for ad hoc command',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='ad_hoc_commands',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='diff_mode',
            field=models.BooleanField(
                default=False, help_text='If enabled, textual changes made to any templated files on the host are shown in the standard output'
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='extra_vars',
            field=models.TextField(blank=True, default='', help_text='Additional variables passed via --extra-vars'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='forks',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Number of parallel processes to use, passed to ansible-playbook as --forks'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='inventory',
            field=models.ForeignKey(
                help_text='Inventory this ad hoc command runs against',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='ad_hoc_commands',
                to='main.inventory',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='job_type',
            field=models.CharField(
                choices=[('run', 'Run'), ('check', 'Check')],
                default='run',
                help_text='If doing a check job the ansible-playbook --check option will be used.',
                max_length=64,
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='limit',
            field=models.TextField(blank=True, default='', help_text='Limit inventory to subset of hosts, passed to ansible-playbook as --limit'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='module_args',
            field=models.TextField(blank=True, default='', help_text='The actions options to execute in k=v format, passed as -a to ansible CLI'),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='module_name',
            field=models.CharField(blank=True, default='', help_text='The name of the action to execute, passed as -m to ansible CLI', max_length=1024),
        ),
        migrations.AlterField(
            model_name='adhoccommand',
            name='verbosity',
            field=models.PositiveIntegerField(
                blank=True,
                choices=[(0, '0 (Normal)'), (1, '1 (Verbose)'), (2, '2 (More Verbose)'), (3, '3 (Debug)'), (4, '4 (Connection Debug)'), (5, '5 (WinRM Debug)')],
                default=0,
                help_text='Output verbosity, passed to ansible-playbook as -v to -vvvvvv',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='ad_hoc_command',
            field=models.ForeignKey(
                db_index=False,
                editable=False,
                help_text='Event gives a piece of output data of this ad hoc command',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='ad_hoc_command_events',
                to='main.adhoccommand',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='changed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated a change happened, or is a parent of a changed event'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='counter',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Counter within context of a job that can establish ordering'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='created',
            field=models.DateTimeField(
                default=None, editable=False, help_text='The created timestamp from ansible-runner when event data was first produced', null=True
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='end_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The last line number'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='event',
            field=models.CharField(
                choices=[
                    ('runner_on_failed', 'Host Failed'),
                    ('runner_on_ok', 'Host OK'),
                    ('runner_on_unreachable', 'Host Unreachable'),
                    ('runner_on_skipped', 'Host Skipped'),
                    ('debug', 'Debug'),
                    ('verbose', 'Verbose'),
                    ('deprecated', 'Deprecated'),
                    ('warning', 'Warning'),
                    ('system_warning', 'System Warning'),
                    ('error', 'Error'),
                ],
                help_text='Ansible callback method identifier',
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='event_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Data from ansible-runner about this Ansible event'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='failed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated failure, or is a parent of a failed event'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='host',
            field=models.ForeignKey(
                db_constraint=False,
                default=None,
                editable=False,
                help_text='Associated host this event acted on, when applicable',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='ad_hoc_command_events',
                to='main.host',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='host_name',
            field=models.CharField(default='', editable=False, help_text='The name for the associated host for auditing purposes', max_length=1024),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='job_created',
            field=models.DateTimeField(editable=False, help_text='Created timestamp of associated job, used for table partitioning', null=True),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='modified',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Usually the time when the event was saved by the callback receiver'
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='start_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The first line number in overall job output of the stdout field text'),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='stdout',
            field=models.TextField(
                default='',
                editable=False,
                help_text='TTY output, including stdout and stderr produced directly by the event callback or as a side effect of it',
            ),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='uuid',
            field=models.CharField(default='', editable=False, help_text='Unique identifier from ansible-runner for this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='adhoccommandevent',
            name='verbosity',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Verbosity level of this event, as given by Ansible core'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credential',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='managed',
            field=models.BooleanField(
                default=False, editable=False, help_text='Indicates whether this resource is created and controlled automatically by server logic.'
            ),
        ),
        migrations.AlterField(
            model_name='credential',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='credential',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credential',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='credential',
            name='organization',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Organization used for purposes of access management',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='credentials',
                to='main.organization',
            ),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='input_field_name',
            field=models.CharField(help_text='The name inside of the target credential inputs this will provide', max_length=1024),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='metadata',
            field=awx.main.fields.DynamicCredentialInputField(
                blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Additional parameters for lookup plugin to use'
            ),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='source_credential',
            field=models.ForeignKey(
                help_text='The credential used to authenticate to the secret management system',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='target_input_sources',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='credentialinputsource',
            name='target_credential',
            field=models.ForeignKey(
                help_text='This credential input source will look up fields for the inputs of this target credential',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='input_sources',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='kind',
            field=models.CharField(
                choices=[
                    ('ssh', 'Machine'),
                    ('vault', 'Vault'),
                    ('net', 'Network'),
                    ('scm', 'Source Control'),
                    ('cloud', 'Cloud'),
                    ('registry', 'Container Registry'),
                    ('token', 'Personal Access Token'),
                    ('insights', 'Insights'),
                    ('external', 'External'),
                    ('kubernetes', 'Kubernetes'),
                    ('galaxy', 'Galaxy/Automation Hub'),
                    ('cryptography', 'Cryptography'),
                ],
                help_text='Distinguishes the way credentials of this type may be used',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='managed',
            field=models.BooleanField(
                default=False, editable=False, help_text='Indicates whether this resource is created and controlled automatically by server logic.'
            ),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='credentialtype',
            name='namespace',
            field=models.CharField(default=None, editable=False, help_text='Short identifier for lookup purposes.', max_length=1024, null=True),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='custominventoryscript',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='credential',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Credential to authenticate to the image registry to pull this image',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='managed',
            field=models.BooleanField(
                default=False, editable=False, help_text='Indicates whether this resource is created and controlled automatically by server logic.'
            ),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='executionenvironment',
            name='name',
            field=models.CharField(
                help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512, unique=True
            ),
        ),
        migrations.AlterField(
            model_name='group',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='group',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='group',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='group',
            name='inventory',
            field=models.ForeignKey(
                help_text='Inventory this group is part of', on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='main.inventory'
            ),
        ),
        migrations.AlterField(
            model_name='group',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='group',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='group',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='host',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='host',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='host',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='host',
            name='inventory',
            field=models.ForeignKey(
                help_text='Inventory this host is part of', on_delete=django.db.models.deletion.CASCADE, related_name='hosts', to='main.inventory'
            ),
        ),
        migrations.AlterField(
            model_name='host',
            name='last_job',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Last job that acted on this host. If limit or host pattern does not matche host, this will not be set.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='hosts_as_last_job+',
                to='main.job',
            ),
        ),
        migrations.AlterField(
            model_name='host',
            name='last_job_host_summary',
            field=models.ForeignKey(
                blank=True,
                default=None,
                editable=False,
                help_text='Last playbook summary details from a job that acted on this host.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='hosts_as_last_job_summary+',
                to='main.jobhostsummary',
            ),
        ),
        migrations.AlterField(
            model_name='host',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='host',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='host',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='hostmetric',
            name='hostname',
            field=models.CharField(help_text='Corresponds to the name field of the host model', max_length=512, unique=True),
        ),
        migrations.AlterField(
            model_name='instance',
            name='capacity',
            field=models.PositiveIntegerField(default=100, editable=False, help_text='Capacity of instance computed in its last health check'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='capacity_adjustment',
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal('1'),
                help_text='Controls whether capacity is weighted towards memory or CPU capacity',
                max_digits=3,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name='instance',
            name='cpu',
            field=models.DecimalField(
                decimal_places=1, default=Decimal('0'), editable=False, help_text='CPU count as reported by instance health check', max_digits=4
            ),
        ),
        migrations.AlterField(
            model_name='instance',
            name='cpu_capacity',
            field=models.IntegerField(default=0, editable=False, help_text='Capacity of instance from last helth check, only considering processor count'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Time this instance record was created'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='enabled',
            field=models.BooleanField(default=True, help_text='Allows manually disabling instance from receiving work'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='hostname',
            field=models.CharField(help_text='Fields set in instance registration', max_length=250, unique=True),
        ),
        migrations.AlterField(
            model_name='instance',
            name='ip_address',
            field=models.CharField(blank=True, default='', help_text='Fields set in instance registration', max_length=50),
        ),
        migrations.AlterField(
            model_name='instance',
            name='managed_by_policy',
            field=models.BooleanField(default=True, help_text='Controls whether instance is available to be added to instance groups by policy rules'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='mem_capacity',
            field=models.IntegerField(default=0, editable=False, help_text='Capacity of instance from last helth check, only considering available memory'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='memory',
            field=models.BigIntegerField(
                default=0, editable=False, help_text='Total system memory of this instance in bytes as reported by instance health check'
            ),
        ),
        migrations.AlterField(
            model_name='instance',
            name='modified',
            field=models.DateTimeField(auto_now=True, help_text='Time this instance record was modified, not counting health checks'),
        ),
        migrations.AlterField(
            model_name='instance',
            name='uuid',
            field=models.CharField(default='00000000-0000-0000-0000-000000000000', help_text='Fields set in instance registration', max_length=40),
        ),
        migrations.AlterField(
            model_name='instance',
            name='version',
            field=models.CharField(blank=True, help_text='Version as reported by instance health check', max_length=120),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when this instance group was created by API or awx-manage command'),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='credential',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='K8S credential used for authentication to cluster for container group type instance groups only',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='is_container_group',
            field=models.BooleanField(default=False, help_text='Will run jobs in a new K8S pod, as opposed to traditional VM'),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='modified',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp of last user modification to this instance group'),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='name',
            field=models.CharField(
                help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=250, unique=True
            ),
        ),
        migrations.AlterField(
            model_name='instancegroup',
            name='pod_spec_override',
            field=models.TextField(blank=True, default='', help_text='Only valid for container groups, merge generated pod spec with these values'),
        ),
        migrations.AlterField(
            model_name='instancelink',
            name='source',
            field=models.ForeignKey(
                help_text='Instance that establishes outbound connection', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='main.instance'
            ),
        ),
        migrations.AlterField(
            model_name='instancelink',
            name='target',
            field=models.ForeignKey(
                help_text='Instance that receives the request', on_delete=django.db.models.deletion.CASCADE, related_name='reverse_peers', to='main.instance'
            ),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='inventory',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='inventory',
            field=models.ForeignKey(
                default=None,
                help_text='Inventory to update with content produced by this inventory source',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='inventory_sources',
                to='main.inventory',
            ),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='source',
            field=models.CharField(
                choices=[
                    ('file', 'File, Directory or Script'),
                    ('constructed', 'Template additional groups and hostvars at runtime'),
                    ('scm', 'Sourced from a Project'),
                    ('ec2', 'Amazon EC2'),
                    ('gce', 'Google Compute Engine'),
                    ('azure_rm', 'Microsoft Azure Resource Manager'),
                    ('vmware', 'VMware vCenter'),
                    ('satellite6', 'Red Hat Satellite 6'),
                    ('openstack', 'OpenStack'),
                    ('rhv', 'Red Hat Virtualization'),
                    ('controller', 'Red Hat Ansible Automation Platform'),
                    ('insights', 'Red Hat Insights'),
                ],
                default=None,
                help_text='The type of inventory update.',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='source_path',
            field=models.CharField(
                blank=True, default='', help_text='File path of -i option when sourced from a file in a project or from awx-manage command.', max_length=1024
            ),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='update_cache_timeout',
            field=models.PositiveIntegerField(
                default=0, help_text='Prevents additional update_on_launch triggered updates within this many second of each other'
            ),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='update_on_launch',
            field=models.BooleanField(default=False, help_text='Whether to automatically update this inventory source before a job runs.'),
        ),
        migrations.AlterField(
            model_name='inventorysource',
            name='verbosity',
            field=models.PositiveIntegerField(
                blank=True,
                choices=[(0, '0 (WARNING)'), (1, '1 (INFO)'), (2, '2 (DEBUG)')],
                default=1,
                help_text='Level of logs to write from ansible-inventory as well as from database writing logs.',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='inventory',
            field=models.ForeignKey(
                default=None,
                help_text='Inventory that this update acts on.',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='inventory_updates',
                to='main.inventory',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='inventory_source',
            field=models.ForeignKey(
                editable=False,
                help_text='The inventory source where details for this update input.',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='inventory_updates',
                to='main.inventorysource',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='license_error',
            field=models.BooleanField(default=False, editable=False, help_text='Marks whether this inventory update failed due to a license error.'),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='org_host_limit_error',
            field=models.BooleanField(
                default=False, editable=False, help_text='Marks whether this inventory update failed due to its organization max_hosts restriction.'
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='source',
            field=models.CharField(
                choices=[
                    ('file', 'File, Directory or Script'),
                    ('constructed', 'Template additional groups and hostvars at runtime'),
                    ('scm', 'Sourced from a Project'),
                    ('ec2', 'Amazon EC2'),
                    ('gce', 'Google Compute Engine'),
                    ('azure_rm', 'Microsoft Azure Resource Manager'),
                    ('vmware', 'VMware vCenter'),
                    ('satellite6', 'Red Hat Satellite 6'),
                    ('openstack', 'OpenStack'),
                    ('rhv', 'Red Hat Virtualization'),
                    ('controller', 'Red Hat Ansible Automation Platform'),
                    ('insights', 'Red Hat Insights'),
                ],
                default=None,
                help_text='The type of inventory update.',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='source_path',
            field=models.CharField(
                blank=True, default='', help_text='File path of -i option when sourced from a file in a project or from awx-manage command.', max_length=1024
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdate',
            name='verbosity',
            field=models.PositiveIntegerField(
                blank=True,
                choices=[(0, '0 (WARNING)'), (1, '1 (INFO)'), (2, '2 (DEBUG)')],
                default=1,
                help_text='Level of logs to write from ansible-inventory as well as from database writing logs.',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='counter',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Counter within context of a job that can establish ordering'),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='created',
            field=models.DateTimeField(
                default=None, editable=False, help_text='The created timestamp from ansible-runner when event data was first produced', null=True
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='end_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The last line number'),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='event_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Data from ansible-runner about this Ansible event'),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='inventory_update',
            field=models.ForeignKey(
                db_index=False,
                editable=False,
                help_text='Event gives a piece of output data of this inventory update',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='inventory_update_events',
                to='main.inventoryupdate',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='job_created',
            field=models.DateTimeField(editable=False, help_text='Created timestamp of associated job, used for table partitioning', null=True),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='modified',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Usually the time when the event was saved by the callback receiver'
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='start_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The first line number in overall job output of the stdout field text'),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='stdout',
            field=models.TextField(
                default='',
                editable=False,
                help_text='TTY output, including stdout and stderr produced directly by the event callback or as a side effect of it',
            ),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='uuid',
            field=models.CharField(default='', editable=False, help_text='Unique identifier from ansible-runner for this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='inventoryupdateevent',
            name='verbosity',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Verbosity level of this event, as given by Ansible core'),
        ),
        migrations.AlterField(
            model_name='job',
            name='allow_simultaneous',
            field=models.BooleanField(default=False, help_text='Allow running multiple jobs from this playbook at the same time'),
        ),
        migrations.AlterField(
            model_name='job',
            name='artifacts',
            field=awx.main.fields.JSONBlob(
                blank=True, default=dict, editable=False, help_text='Data collected by set_stats task inside of playbook, can be passed between workflow nodes'
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='become_enabled',
            field=models.BooleanField(default=False, help_text='If true, passes --become to ansible-playbook for privilege escalation'),
        ),
        migrations.AlterField(
            model_name='job',
            name='extra_vars',
            field=models.TextField(blank=True, default='', help_text='User variables to pass to ansible-playbook as --extra-vars'),
        ),
        migrations.AlterField(
            model_name='job',
            name='force_handlers',
            field=models.BooleanField(
                blank=True, default=False, help_text='If true, run handlers even if task fails, passed to ansible-playbook as --force-handlers'
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='forks',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Number of parallel processes to use, passed to ansible-playbook as --forks'),
        ),
        migrations.AlterField(
            model_name='job',
            name='inventory',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Related inventory to run against.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.inventory',
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='job_tags',
            field=models.TextField(blank=True, default='', help_text='Only runs plays and tasks with tags, passed to ansible-playbook as --tags'),
        ),
        migrations.AlterField(
            model_name='job',
            name='job_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The template this job was launched from',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='jobs',
                to='main.jobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='job_type',
            field=models.CharField(
                choices=[('run', 'Run'), ('check', 'Check'), ('scan', 'Scan')],
                default='run',
                help_text='If doing a check job the ansible-playbook --check option will be used.',
                max_length=64,
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='limit',
            field=models.TextField(blank=True, default='', help_text='Limit inventory to subset of hosts, passed to ansible-playbook as --limit'),
        ),
        migrations.AlterField(
            model_name='job',
            name='playbook',
            field=models.CharField(blank=True, default='', help_text='Ansible playbook to run from the project', max_length=1024),
        ),
        migrations.AlterField(
            model_name='job',
            name='project',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Source control project.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.project',
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='skip_tags',
            field=models.CharField(
                blank=True, default='', help_text='Skip plays and tasks with tags, passed to ansible-playbook as --skip-tags', max_length=1024
            ),
        ),
        migrations.AlterField(
            model_name='job',
            name='start_at_task',
            field=models.CharField(blank=True, default='', help_text='Start playbook at task, passed to ansible-playbook as --start-at-task', max_length=1024),
        ),
        migrations.AlterField(
            model_name='job',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='job',
            name='verbosity',
            field=models.PositiveIntegerField(
                blank=True,
                choices=[(0, '0 (Normal)'), (1, '1 (Verbose)'), (2, '2 (More Verbose)'), (3, '3 (Debug)'), (4, '4 (Connection Debug)'), (5, '5 (WinRM Debug)')],
                default=0,
                help_text='Output verbosity, passed to ansible-playbook as -v to -vvvvvv',
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='changed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated a change happened, or is a parent of a changed event'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='counter',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Counter within context of a job that can establish ordering'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='created',
            field=models.DateTimeField(
                default=None, editable=False, help_text='The created timestamp from ansible-runner when event data was first produced', null=True
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='end_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The last line number'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='event',
            field=models.CharField(
                choices=[
                    ('runner_on_failed', 'Host Failed'),
                    ('runner_on_start', 'Host Started'),
                    ('runner_on_ok', 'Host OK'),
                    ('runner_on_error', 'Host Failure'),
                    ('runner_on_skipped', 'Host Skipped'),
                    ('runner_on_unreachable', 'Host Unreachable'),
                    ('runner_on_no_hosts', 'No Hosts Remaining'),
                    ('runner_on_async_poll', 'Host Polling'),
                    ('runner_on_async_ok', 'Host Async OK'),
                    ('runner_on_async_failed', 'Host Async Failure'),
                    ('runner_item_on_ok', 'Item OK'),
                    ('runner_item_on_failed', 'Item Failed'),
                    ('runner_item_on_skipped', 'Item Skipped'),
                    ('runner_retry', 'Host Retry'),
                    ('runner_on_file_diff', 'File Difference'),
                    ('playbook_on_start', 'Playbook Started'),
                    ('playbook_on_notify', 'Running Handlers'),
                    ('playbook_on_include', 'Including File'),
                    ('playbook_on_no_hosts_matched', 'No Hosts Matched'),
                    ('playbook_on_no_hosts_remaining', 'No Hosts Remaining'),
                    ('playbook_on_task_start', 'Task Started'),
                    ('playbook_on_vars_prompt', 'Variables Prompted'),
                    ('playbook_on_setup', 'Gathering Facts'),
                    ('playbook_on_import_for_host', 'internal: on Import for Host'),
                    ('playbook_on_not_import_for_host', 'internal: on Not Import for Host'),
                    ('playbook_on_play_start', 'Play Started'),
                    ('playbook_on_stats', 'Playbook Complete'),
                    ('debug', 'Debug'),
                    ('verbose', 'Verbose'),
                    ('deprecated', 'Deprecated'),
                    ('warning', 'Warning'),
                    ('system_warning', 'System Warning'),
                    ('error', 'Error'),
                ],
                help_text='Ansible callback method identifier',
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='event_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Data from ansible-runner about this Ansible event'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='failed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated failure, or is a parent of a failed event'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='host',
            field=models.ForeignKey(
                db_constraint=False,
                default=None,
                editable=False,
                help_text='Associated host this event acted on, when applicable',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='job_events_as_primary_host',
                to='main.host',
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='host_name',
            field=models.CharField(default='', editable=False, help_text='The name for the associated host for auditing purposes', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='job',
            field=models.ForeignKey(
                db_index=False,
                editable=False,
                help_text='Event gives a piece of output data of this job',
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='job_events',
                to='main.job',
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='job_created',
            field=models.DateTimeField(editable=False, help_text='Created timestamp of associated job, used for table partitioning', null=True),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='modified',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Usually the time when the event was saved by the callback receiver'
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='parent_uuid',
            field=models.CharField(default='', editable=False, help_text='The uuid for the direct parent event of this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='play',
            field=models.CharField(default='', editable=False, help_text='Play this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='playbook',
            field=models.CharField(default='', editable=False, help_text='Playbook this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='role',
            field=models.CharField(default='', editable=False, help_text='Ansible role this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='start_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The first line number in overall job output of the stdout field text'),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='stdout',
            field=models.TextField(
                default='',
                editable=False,
                help_text='TTY output, including stdout and stderr produced directly by the event callback or as a side effect of it',
            ),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='task',
            field=models.CharField(default='', editable=False, help_text='Name of task', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='uuid',
            field=models.CharField(default='', editable=False, help_text='Unique identifier from ansible-runner for this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobevent',
            name='verbosity',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Verbosity level of this event, as given by Ansible core'),
        ),
        migrations.AlterField(
            model_name='jobhostsummary',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='jobhostsummary',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='joblaunchconfig',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='joblaunchconfig',
            name='execution_environment',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The prompted container image to be used for execution.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_as_prompt',
                to='main.executionenvironment',
            ),
        ),
        migrations.AlterField(
            model_name='joblaunchconfig',
            name='extra_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Prompted variables to be added to extra_vars on launch.'),
        ),
        migrations.AlterField(
            model_name='joblaunchconfig',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='allow_simultaneous',
            field=models.BooleanField(default=False, help_text='Allow running multiple jobs from this playbook at the same time'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_credential_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_diff_mode_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_execution_environment_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_forks_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_instance_groups_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_inventory_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_job_slice_count_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_job_type_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_labels_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_limit_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_scm_branch_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_skip_tags_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_tags_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_timeout_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_variables_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='ask_verbosity_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='become_enabled',
            field=models.BooleanField(default=False, help_text='If true, passes --become to ansible-playbook for privilege escalation'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='extra_vars',
            field=models.TextField(blank=True, default='', help_text='User variables to pass to ansible-playbook as --extra-vars'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='force_handlers',
            field=models.BooleanField(
                blank=True, default=False, help_text='If true, run handlers even if task fails, passed to ansible-playbook as --force-handlers'
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='forks',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Number of parallel processes to use, passed to ansible-playbook as --forks'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='host_config_key',
            field=models.CharField(blank=True, default='', help_text='Token used for provisioning callback.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='inventory',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Related inventory to run against.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.inventory',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='job_tags',
            field=models.TextField(blank=True, default='', help_text='Only runs plays and tasks with tags, passed to ansible-playbook as --tags'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='job_type',
            field=models.CharField(
                choices=[('run', 'Run'), ('check', 'Check')],
                default='run',
                help_text='If doing a check job the ansible-playbook --check option will be used.',
                max_length=64,
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='limit',
            field=models.TextField(blank=True, default='', help_text='Limit inventory to subset of hosts, passed to ansible-playbook as --limit'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='playbook',
            field=models.CharField(blank=True, default='', help_text='Ansible playbook to run from the project', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='project',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Source control project.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.project',
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='skip_tags',
            field=models.CharField(
                blank=True, default='', help_text='Skip plays and tasks with tags, passed to ansible-playbook as --skip-tags', max_length=1024
            ),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='start_at_task',
            field=models.CharField(blank=True, default='', help_text='Start playbook at task, passed to ansible-playbook as --start-at-task', max_length=1024),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='survey_enabled',
            field=models.BooleanField(default=False, help_text='If true, the survey will be enabled.'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='survey_spec',
            field=models.JSONField(blank=True, default=dict, help_text='Definition for launch time survey questions.'),
        ),
        migrations.AlterField(
            model_name='jobtemplate',
            name='verbosity',
            field=models.PositiveIntegerField(
                blank=True,
                choices=[(0, '0 (Normal)'), (1, '1 (Verbose)'), (2, '2 (More Verbose)'), (3, '3 (Debug)'), (4, '4 (Connection Debug)'), (5, '5 (WinRM Debug)')],
                default=0,
                help_text='Output verbosity, passed to ansible-playbook as -v to -vvvvvv',
            ),
        ),
        migrations.AlterField(
            model_name='label',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='label',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='label',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='label',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='label',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='label',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='notification',
            name='body',
            field=models.JSONField(blank=True, default=dict, help_text='Body text of this notification'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='error',
            field=models.TextField(blank=True, default='', editable=False, help_text='Error text from sending the notification, if appliable'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_template',
            field=models.ForeignKey(
                editable=False,
                help_text='The notifiation template that configured the behavior of this notification',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='notifications',
                to='main.notificationtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(
                choices=[
                    ('email', 'Email'),
                    ('grafana', 'Grafana'),
                    ('irc', 'IRC'),
                    ('mattermost', 'Mattermost'),
                    ('pagerduty', 'Pagerduty'),
                    ('rocketchat', 'Rocket.Chat'),
                    ('slack', 'Slack'),
                    ('twilio', 'Twilio'),
                    ('webhook', 'Webhook'),
                ],
                help_text='Short identifier of the type of external service this sends to',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notifications_sent',
            field=models.IntegerField(default=0, editable=False, help_text='Number of notifications sent as part of this notification, usually either 1 or 0'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='recipients',
            field=models.TextField(blank=True, default='', editable=False, help_text='Addressees of this notification'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='status',
            field=models.CharField(
                choices=[('pending', 'Pending'), ('successful', 'Successful'), ('failed', 'Failed')],
                default='pending',
                editable=False,
                help_text='Identifies the progress or outcome of the notification',
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name='notification',
            name='subject',
            field=models.TextField(blank=True, default='', editable=False, help_text='When applicable, the subject text of this notification'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='notification_configuration',
            field=models.JSONField(default=dict, help_text='Controls content sent to the external system'),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='notification_type',
            field=models.CharField(
                choices=[
                    ('email', 'Email'),
                    ('grafana', 'Grafana'),
                    ('irc', 'IRC'),
                    ('mattermost', 'Mattermost'),
                    ('pagerduty', 'Pagerduty'),
                    ('rocketchat', 'Rocket.Chat'),
                    ('slack', 'Slack'),
                    ('twilio', 'Twilio'),
                    ('webhook', 'Webhook'),
                ],
                help_text='Identifies the type of external system this notification template will send to',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='notificationtemplate',
            name='organization',
            field=models.ForeignKey(
                help_text='The organization used for purposes of access and inheritance',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='notification_templates',
                to='main.organization',
            ),
        ),
        migrations.AlterField(
            model_name='oauth2accesstoken',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='oauth2accesstoken',
            name='last_used',
            field=models.DateTimeField(default=None, editable=False, help_text='Last time token was used to make a request', null=True),
        ),
        migrations.AlterField(
            model_name='oauth2accesstoken',
            name='modified',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp of last user modification'),
        ),
        migrations.AlterField(
            model_name='oauth2application',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='oauth2application',
            name='logo_data',
            field=models.TextField(
                default='',
                editable=False,
                help_text='Byte data used to render logo on login page',
                validators=[django.core.validators.RegexValidator(re.compile('.*'))],
            ),
        ),
        migrations.AlterField(
            model_name='organization',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='organization',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='organization',
            name='name',
            field=models.CharField(
                help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512, unique=True
            ),
        ),
        migrations.AlterField(
            model_name='profile',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='project',
            name='credential',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Authentication necessary to pull from the source control repository. Must be SCM type.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='projectupdate',
            name='credential',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Authentication necessary to pull from the source control repository. Must be SCM type.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.credential',
            ),
        ),
        migrations.AlterField(
            model_name='projectupdate',
            name='job_type',
            field=models.CharField(
                choices=[('run', 'Run'), ('check', 'Check')],
                default='check',
                help_text='Construct internal to projects. Check indicates that the project revision is updated from the remote. Run indicates a source tree update to last-known revision.',
                max_length=64,
            ),
        ),
        migrations.AlterField(
            model_name='projectupdate',
            name='project',
            field=models.ForeignKey(
                editable=False,
                help_text='Project that this update is for.',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='project_updates',
                to='main.project',
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='changed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated a change happened, or is a parent of a changed event'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='counter',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Counter within context of a job that can establish ordering'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='created',
            field=models.DateTimeField(
                default=None, editable=False, help_text='The created timestamp from ansible-runner when event data was first produced', null=True
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='end_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The last line number'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='event',
            field=models.CharField(
                choices=[
                    ('runner_on_failed', 'Host Failed'),
                    ('runner_on_start', 'Host Started'),
                    ('runner_on_ok', 'Host OK'),
                    ('runner_on_error', 'Host Failure'),
                    ('runner_on_skipped', 'Host Skipped'),
                    ('runner_on_unreachable', 'Host Unreachable'),
                    ('runner_on_no_hosts', 'No Hosts Remaining'),
                    ('runner_on_async_poll', 'Host Polling'),
                    ('runner_on_async_ok', 'Host Async OK'),
                    ('runner_on_async_failed', 'Host Async Failure'),
                    ('runner_item_on_ok', 'Item OK'),
                    ('runner_item_on_failed', 'Item Failed'),
                    ('runner_item_on_skipped', 'Item Skipped'),
                    ('runner_retry', 'Host Retry'),
                    ('runner_on_file_diff', 'File Difference'),
                    ('playbook_on_start', 'Playbook Started'),
                    ('playbook_on_notify', 'Running Handlers'),
                    ('playbook_on_include', 'Including File'),
                    ('playbook_on_no_hosts_matched', 'No Hosts Matched'),
                    ('playbook_on_no_hosts_remaining', 'No Hosts Remaining'),
                    ('playbook_on_task_start', 'Task Started'),
                    ('playbook_on_vars_prompt', 'Variables Prompted'),
                    ('playbook_on_setup', 'Gathering Facts'),
                    ('playbook_on_import_for_host', 'internal: on Import for Host'),
                    ('playbook_on_not_import_for_host', 'internal: on Not Import for Host'),
                    ('playbook_on_play_start', 'Play Started'),
                    ('playbook_on_stats', 'Playbook Complete'),
                    ('debug', 'Debug'),
                    ('verbose', 'Verbose'),
                    ('deprecated', 'Deprecated'),
                    ('warning', 'Warning'),
                    ('system_warning', 'System Warning'),
                    ('error', 'Error'),
                ],
                help_text='Ansible callback method identifier',
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='event_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Data from ansible-runner about this Ansible event'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='failed',
            field=models.BooleanField(default=False, editable=False, help_text='Event data indicated failure, or is a parent of a failed event'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='job_created',
            field=models.DateTimeField(editable=False, help_text='Created timestamp of associated job, used for table partitioning', null=True),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='modified',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Usually the time when the event was saved by the callback receiver'
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='play',
            field=models.CharField(default='', editable=False, help_text='Play this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='playbook',
            field=models.CharField(default='', editable=False, help_text='Playbook this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='project_update',
            field=models.ForeignKey(
                db_index=False,
                editable=False,
                help_text='Event gives a piece of output data of this project update',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='project_update_events',
                to='main.projectupdate',
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='role',
            field=models.CharField(default='', editable=False, help_text='Ansible role this event was produced in', max_length=1024),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='start_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The first line number in overall job output of the stdout field text'),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='stdout',
            field=models.TextField(
                default='',
                editable=False,
                help_text='TTY output, including stdout and stderr produced directly by the event callback or as a side effect of it',
            ),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='task',
            field=models.CharField(default='', editable=False, help_text='Name of task', max_length=1024),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='uuid',
            field=models.CharField(default='', editable=False, help_text='Unique identifier from ansible-runner for this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='projectupdateevent',
            name='verbosity',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Verbosity level of this event, as given by Ansible core'),
        ),
        migrations.AlterField(
            model_name='role',
            name='content_type',
            field=models.ForeignKey(
                default=None,
                help_text='Resource type that this role applies for.',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='contenttypes.contenttype',
            ),
        ),
        migrations.AlterField(
            model_name='role',
            name='implicit_parents',
            field=models.TextField(default='[]', help_text='Cached id list of parent roles.'),
        ),
        migrations.AlterField(
            model_name='role',
            name='object_id',
            field=models.PositiveIntegerField(default=None, help_text='The id of the resource this role applies to.', null=True),
        ),
        migrations.AlterField(
            model_name='role',
            name='parents',
            field=models.ManyToManyField(help_text='Roles that implicitly grant this role.', related_name='children', to='main.role'),
        ),
        migrations.AlterField(
            model_name='role',
            name='role_field',
            field=models.TextField(help_text='Type of permission granted by this role.'),
        ),
        migrations.AlterField(
            model_name='role',
            name='singleton_name',
            field=models.TextField(
                db_index=True, default=None, help_text='role_field but only for system level roles with no associated content_object.', null=True, unique=True
            ),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='execution_environment',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The prompted container image to be used for execution.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_as_prompt',
                to='main.executionenvironment',
            ),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='extra_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Prompted variables to be added to extra_vars on launch.'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='schedule',
            name='unified_job_template',
            field=models.ForeignKey(
                help_text='Template that this schedule will run.',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='schedules',
                to='main.unifiedjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='systemjob',
            name='extra_vars',
            field=models.TextField(blank=True, default='', help_text='Variables converted into CLI arguments for the awx-manage command this job runs'),
        ),
        migrations.AlterField(
            model_name='systemjob',
            name='job_type',
            field=models.CharField(
                blank=True,
                choices=[
                    ('cleanup_jobs', 'Remove jobs older than a certain number of days'),
                    ('cleanup_activitystream', 'Remove activity stream entries older than a certain number of days'),
                    ('cleanup_sessions', 'Removes expired browser sessions from the database'),
                    ('cleanup_tokens', 'Removes expired OAuth 2 access tokens and refresh tokens'),
                ],
                default='',
                help_text='If doing a check job the ansible-playbook --check option will be used.',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='systemjob',
            name='system_job_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The system job template this job was launched from',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='jobs',
                to='main.systemjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='counter',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Counter within context of a job that can establish ordering'),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='created',
            field=models.DateTimeField(
                default=None, editable=False, help_text='The created timestamp from ansible-runner when event data was first produced', null=True
            ),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='end_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The last line number'),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='event_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Data from ansible-runner about this Ansible event'),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='job_created',
            field=models.DateTimeField(editable=False, help_text='Created timestamp of associated job, used for table partitioning', null=True),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='modified',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Usually the time when the event was saved by the callback receiver'
            ),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='start_line',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='The first line number in overall job output of the stdout field text'),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='stdout',
            field=models.TextField(
                default='',
                editable=False,
                help_text='TTY output, including stdout and stderr produced directly by the event callback or as a side effect of it',
            ),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='system_job',
            field=models.ForeignKey(
                db_index=False,
                editable=False,
                help_text='Event gives a piece of output data of this system job',
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='system_job_events',
                to='main.systemjob',
            ),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='uuid',
            field=models.CharField(default='', editable=False, help_text='Unique identifier from ansible-runner for this event', max_length=1024),
        ),
        migrations.AlterField(
            model_name='systemjobevent',
            name='verbosity',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Verbosity level of this event, as given by Ansible core'),
        ),
        migrations.AlterField(
            model_name='systemjobtemplate',
            name='job_type',
            field=models.CharField(
                blank=True,
                choices=[
                    ('cleanup_jobs', 'Remove jobs older than a certain number of days'),
                    ('cleanup_activitystream', 'Remove activity stream entries older than a certain number of days'),
                    ('cleanup_sessions', 'Removes expired browser sessions from the database'),
                    ('cleanup_tokens', 'Removes expired OAuth 2 access tokens and refresh tokens'),
                ],
                default='',
                help_text='If doing a check job the ansible-playbook --check option will be used.',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='team',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='team',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='team',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='team',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='team',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='team',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='team',
            name='organization',
            field=models.ForeignKey(
                help_text='Organization this team is a part of, for permission inheritance',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='teams',
                to='main.organization',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='cancel_flag',
            field=models.BooleanField(
                blank=True, default=False, editable=False, help_text='This flag is changed to true when a request to cancel this job is received.'
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='celery_task_id',
            field=models.CharField(
                blank=True, default='', editable=False, help_text='Internal task tracking id used by the run_dispatcher system service.', max_length=100
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='controller_node',
            field=models.TextField(blank=True, default='', editable=False, help_text='The instance that managed the execution of this job.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='created',
            field=models.DateTimeField(
                db_index=True, default=None, editable=False, help_text='Timestamp when launch request was received and unified job entry created.'
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='emitted_events',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Total number of events produced by this job (cached field).'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='failed',
            field=models.BooleanField(default=False, editable=False, help_text='A true value corresponds to a non-zero return code of this job.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='job_args',
            field=models.TextField(blank=True, default='', editable=False, help_text='The CLI args for this job, given as a list like python sys.argv.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='job_cwd',
            field=models.CharField(
                blank=True,
                default='',
                editable=False,
                help_text='The working directory for this job. If containerized, gives location inside container.',
                max_length=1024,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='job_env',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Environment varaibles'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='launch_type',
            field=models.CharField(
                choices=[
                    ('manual', 'Manual'),
                    ('relaunch', 'Relaunch'),
                    ('callback', 'Callback'),
                    ('scheduled', 'Scheduled'),
                    ('dependency', 'Dependency'),
                    ('workflow', 'Workflow'),
                    ('webhook', 'Webhook'),
                    ('sync', 'Sync'),
                    ('scm', 'SCM Update'),
                ],
                db_index=True,
                default='manual',
                editable=False,
                help_text='Information about the origin of this job.',
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='result_traceback',
            field=models.TextField(blank=True, default='', editable=False, help_text='For system errors running this job, a traceback or error output.'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='schedule',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='If applicable, the schedule responsible for starting this job.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                to='main.schedule',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='start_args',
            field=models.TextField(blank=True, default='', editable=False, help_text='Internal encrypted field for passing information between systems'),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='status',
            field=models.CharField(
                choices=[
                    ('new', 'New'),
                    ('pending', 'Pending'),
                    ('waiting', 'Waiting'),
                    ('running', 'Running'),
                    ('successful', 'Successful'),
                    ('failed', 'Failed'),
                    ('error', 'Error'),
                    ('canceled', 'Canceled'),
                ],
                db_index=True,
                default='new',
                editable=False,
                help_text='Gives information about the progression and outcome of this job.',
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjob',
            name='unified_job_template',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='The template for this job, regardless of type. Same value as the type-specific field like job_template or project.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_unified_jobs',
                to='main.unifiedjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='created_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the user who created this object via the API.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_created+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='current_job',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='If allow_simultaneous is false, this should give the currently active job if one is running.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)s_as_current_job+',
                to='main.unifiedjob',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Extra information about this resource to show in its detail view.'),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='last_job',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Last job completed for this template.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)s_as_last_job+',
                to='main.unifiedjob',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='last_job_failed',
            field=models.BooleanField(default=False, editable=False, help_text='Reflects the failed status of last_job.'),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='last_job_run',
            field=models.DateTimeField(default=None, editable=False, help_text='The finished timestamp of last_job.', null=True),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='modified_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='Record of the last user to modify this object, corresponding to the modified timestamp.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_modified+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='name',
            field=models.CharField(help_text='Name of object to be displayed in list views. Also commonly used by clients for lookups.', max_length=512),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='next_job_run',
            field=models.DateTimeField(
                default=None, editable=False, help_text='If schedules are enabled for this template, the timestamp for next expected scheduled run.', null=True
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='next_schedule',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='If schedules are enabled for this template, the next expected schedule to run.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_as_next_schedule+',
                to='main.schedule',
            ),
        ),
        migrations.AlterField(
            model_name='unifiedjobtemplate',
            name='status',
            field=models.CharField(
                choices=[
                    ('new', 'New'),
                    ('pending', 'Pending'),
                    ('waiting', 'Waiting'),
                    ('running', 'Running'),
                    ('successful', 'Successful'),
                    ('failed', 'Failed'),
                    ('error', 'Error'),
                    ('canceled', 'Canceled'),
                    ('never updated', 'Never Updated'),
                    ('ok', 'OK'),
                    ('missing', 'Missing'),
                    ('none', 'No External Source'),
                    ('updating', 'Updating'),
                ],
                default='ok',
                editable=False,
                help_text='Reflects the status of last_job.',
                max_length=32,
            ),
        ),
        migrations.AlterField(
            model_name='workflowapproval',
            name='approved_or_denied_by',
            field=models.ForeignKey(
                default=None,
                editable=False,
                help_text='User who approved or denied this.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%s(class)s_approved+',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name='workflowapproval',
            name='workflow_approval_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Corresponding workflow approval template (associated with workflow job template) for this approval (associated with workflow job)',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='approvals',
                to='main.workflowapprovaltemplate',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='allow_simultaneous',
            field=models.BooleanField(
                default=False,
                help_text='Allow multiple workflow jobs to run at the same time. This does not impact simultaneous rules of templates inside workflow.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='extra_vars',
            field=models.TextField(
                blank=True, default='', help_text='Variables that will be added (as a prompt) to extra_vars of jobs in this workflow that allow it'
            ),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='is_bulk_job',
            field=models.BooleanField(default=False, help_text='If true, this was created from the bulk job launch endpoint.'),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='is_sliced_job',
            field=models.BooleanField(default=False, help_text='If true, this was created from a sliced job template.'),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='workflowjob',
            name='workflow_job_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Workflow job template this job was created from',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='workflow_jobs',
                to='main.workflowjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='ancestor_artifacts',
            field=awx.main.fields.JSONBlob(
                blank=True, default=dict, editable=False, help_text='Combined variables of artifacts from all upstream jobs in this workflow.'
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='execution_environment',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The prompted container image to be used for execution.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_as_prompt',
                to='main.executionenvironment',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='extra_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Prompted variables to be added to extra_vars on launch.'),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='job',
            field=models.OneToOneField(
                blank=True,
                default=None,
                help_text='The unified job created for this node.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='unified_job_node',
                to='main.unifiedjob',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='unified_job_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Template that this node will run when and if its dependencies are satisfied.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.unifiedjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobnode',
            name='workflow_job',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The workflow job this node is a part of.',
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='workflow_job_nodes',
                to='main.workflowjob',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='allow_simultaneous',
            field=models.BooleanField(
                default=False,
                help_text='Allow multiple workflow jobs to run at the same time. This does not impact simultaneous rules of templates inside workflow.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_inventory_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_labels_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_limit_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_scm_branch_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_skip_tags_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_tags_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='ask_variables_on_launch',
            field=awx.main.fields.AskForField(
                blank=True,
                default=False,
                help_text='If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.If true, prompt for the corresponding field when a user launches this template. Also controls whether schedules and workflows are allowed to provide the field.',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='extra_vars',
            field=models.TextField(
                blank=True, default='', help_text='Variables that will be added (as a prompt) to extra_vars of jobs in this workflow that allow it'
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='survey_enabled',
            field=models.BooleanField(default=False, help_text='If true, the survey will be enabled.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplate',
            name='survey_spec',
            field=models.JSONField(blank=True, default=dict, help_text='Definition for launch time survey questions.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='char_prompts',
            field=models.JSONField(blank=True, default=dict, help_text='Internal dictionary to hold values of job fields'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='created',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of when this resource was created.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='execution_environment',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='The prompted container image to be used for execution.',
                null=True,
                on_delete=awx.main.utils.polymorphic.SET_NULL,
                related_name='%(class)s_as_prompt',
                to='main.executionenvironment',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='extra_data',
            field=awx.main.fields.JSONBlob(blank=True, default=dict, help_text='Prompted variables to be added to extra_vars on launch.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='modified',
            field=models.DateTimeField(default=None, editable=False, help_text='Timestamp of last user modification of any fields or related objects.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='survey_passwords',
            field=models.JSONField(blank=True, default=dict, editable=False, help_text='Used to track which extra_vars should have values encrypted.'),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='unified_job_template',
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text='Template that this node will run when and if its dependencies are satisfied.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(class)ss',
                to='main.unifiedjobtemplate',
            ),
        ),
        migrations.AlterField(
            model_name='workflowjobtemplatenode',
            name='workflow_job_template',
            field=models.ForeignKey(
                help_text='The workflow job template this node is a part of',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='workflow_job_template_nodes',
                to='main.workflowjobtemplate',
            ),
        ),
    ]

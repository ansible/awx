---
dockerhub_version: "{{ lookup('file', playbook_dir + '/../VERSION') }}"
create_preload_data: true

admin_user: 'admin'
admin_email: 'root@localhost'
admin_password: ''

kubernetes_base_path: "{{ local_base_config_path|default('/tmp') }}/{{ kubernetes_deployment_name }}-config"

kubernetes_awx_version: "{{ dockerhub_version }}"
kubernetes_awx_image: "ansible/awx"
kubernetes_web_svc_type: "NodePort"

awx_psp_create: false
awx_psp_name: 'awx'
awx_psp_privileged: true

web_mem_request: 1
web_cpu_request: 500
web_security_context_enabled: true
web_security_context_privileged: false

task_mem_request: 2
task_cpu_request: 1500
task_security_context_enabled: true
task_security_context_privileged: true

redis_mem_request: 2
redis_cpu_request: 500
redis_security_context_enabled: true
redis_security_context_privileged: false
redis_security_context_user: 1001

kubernetes_redis_image: "redis"
kubernetes_redis_image_tag: "latest"
kubernetes_redis_config_mount_path: "/usr/local/etc/redis/redis.conf"

openshift_pg_emptydir: false
openshift_pg_pvc_name: postgresql

kubernetes_deployment_name: awx
kubernetes_serviceaccount_name: awx

kubernetes_deployment_replica_size: 1

postgress_activate_wait: 60

restore_backup_file: "./tower-openshift-backup-latest.tar.gz"

insights_url_base: "https://example.org"
automation_analytics_url: "https://example.org"
insights_agent_mime: "application/example"

custom_venvs_path: "/opt/custom-venvs"
custom_venvs_python: "python2"

ca_trust_bundle: "/etc/pki/tls/certs/ca-bundle.crt"

container_groups_image: "ansible/ansible-runner"

uwsgi_bash: "bash -c"
